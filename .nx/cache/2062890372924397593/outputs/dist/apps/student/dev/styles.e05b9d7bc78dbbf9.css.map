{"version":3,"file":"styles.e05b9d7bc78dbbf9.css","mappings":";;;AAgBI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;AC5EJ;;ACcE;EF8DE;EAAA;EAAA;EAAA;EAAA;AC5DJ;;ACGE;EFyDE;EAAA;EAAA;EAAA;EAAA;ACpDJ;;AFVI;EC8DA;AChDJ;;AEWE;EACE,0BAXe;AFGnB;AESI;EACE,cANa;AFDnB;;AE/BI;;EACE,cAoBM;AFeZ;AE/BI;;EAKE,mBAWM;AFmBZ;AElCM;;EACE,cAiBO;AFoBf;;AE5CI;;EACE,cAqBK;AF2BX;AE5CI;;EAKE,mBAYK;AF+BX;AE/CM;;EACE,cAiBO;AFiCf;;AEzDI;;EACE,cAqBK;AFwCX;AEzDI;;EAKE,mBAYK;AF4CX;AE5DM;;EACE,cAiBO;AF8Cf;;AEtEI;;EACE,cAsBG;AFoDT;AEtEI;;EAKE,mBAaG;AFwDT;AEzEM;;EACE,cAiBO;AF2Df;;AErBI;;EACE,cA/Ba;AFwDnB;AEtBI;;EACE,mBAnCa;AF4DnB;;AGvEE;EACE;EACA;AH0EJ;;AGhEI;EJuCA;AC6BJ;;AGpEI;EJuCA;ACiCJ;;AGxEI;EJuCA;ACqCJ;;AG5EI;EJuCA;ACyCJ;;AGhFI;EJuCA;AC6CJ;;AGpFI;EJuCA;ACiDJ;;AGxFI;EJuCA;ACqDJ;;AG5FI;EJuCA;ACyDJ;;AGhGI;EJuCA;AC6DJ;;AGpGI;EJuCA;ACiEJ;;AGxGI;EJuCA;ACqEJ;;AG5GI;EJuCA;ACyEJ;;AGhHI;EJuCA;AC6EJ;;AGpHI;EJuCA;ACiFJ;;AGxHI;EJuCA;ACqFJ;;AG5HI;EJuCA;ACyFJ;;AGhII;EJuCA;AC6FJ;;AGpII;EJuCA;ACiGJ;;AGxII;EJuCA;ACqGJ;;AG5II;EJuCA;ACyGJ;;AGhJI;EJuCA;AC6GJ;;AGpJI;EJuCA;ACiHJ;;AGxJI;EJuCA;ACqHJ;;AG5JI;EJuCA;ACyHJ;;AGhKI;EJuCA;AC6HJ;;AG7JI;EACE;AHgKN;;AF/LI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACuIJ;;AI3KI;ELoCA;EAAA;AC2JJ;AK7CI;EACE;IClIF;ENkLF;AACF;AKjGE;EN3EI;EOZF;EPwBA;ACqKJ;AKlGM;EAJJ;IAKM;ELqGN;AACF;AOrKE;EF0DA;IASM;INxEJ;EC+KF;AACF;AK3FE;ENjGI;EOZF;EPwBA;ACqLJ;AItNM;ELiCF;EAAA;ACyLJ;AK3EI;EACE;IClIF;ENgNF;AACF;AK/HE;EN3EI;EOZF;EPwBA;ACmMJ;AKhIM;EAJJ;IAKM;ELmIN;AACF;AOnME;EF0DA;IASM;INxEJ;EC6MF;AACF;AKzHE;ENjGI;EOZF;EPwBA;ACmNJ;AIhPM;EL6BF;EAAA;ACuNJ;AKzGI;EACE;IClIF;EN8OF;AACF;AK7JE;EN3EI;EOZF;EPwBA;ACiOJ;AK9JM;EAJJ;IAKM;ELiKN;AACF;AOjOE;EF0DA;IASM;INxEJ;EC2OF;AACF;AKvJE;ENjGI;EOZF;EPwBA;ACiPJ;AF/SI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACqPJ;;AQ9RE;ETyCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC8TJ;;AQ9VE;ETgCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACwUJ;;AS/UE;EACE,gBA7BO;AT+WX;;AS3UE;EACE;AT8UJ;;ASxUE;EAEE;;qEAAA;EAGA;AT0UJ;;ASzYE;EACE;EACA;AT4YJ;;AS9ZE;EACE;EACA;ATiaJ;;AS9ZE;EAEE;EACA;ATgaJ;;AFpaI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACiXJ;AU9aI;EX6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC2XJ;AUnbI;EXwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACqYJ;;AFncI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACyYJ;;AW/cE;EZsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC8ZJ;AWxdM;EZ0DF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACybJ;AW9eM;EZqDF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACscJ;AWtfM;EZgDF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACmdJ;;AWhfE;EZ6BE;ACudJ;;AY1hBE;EbmEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC6eJ;;AYriBI;EbwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACkhBJ;Aa1jBE;EdwCE;ACqhBJ;AYxkBM;EACE;AZ0kBR;AYtkBM;Eb8CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACqiBJ;AY9kBM;EbyCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACkjBJ;;AYjkBE;EbeE;ACsjBJ;;AFpnBI;EC8DA;EAAA;EAAA;AC4jBJ;;AapmBE;EdwCE;ACgkBJ;;AczmBM;EfyCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC+kBJ;AclnBM;EfmCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC6lBJ;Ac1nBM;Ef6BF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC2mBJ;;AFzqBI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EgB+BF;EACA;EACA;EhBjCE;AC+mBJ;Ae/oBI;EhBgCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EgB+BF;EACA;EACA;Af+nBF;Ae1rBM;EhB0BF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EgB+BF;EACA;EACA;Af2oBF;;AF1uBI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACgrBJ;;AgBjuBE;;EjBiDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACyuBJ;;AgBpxBI;;EjB2CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACsvBJ;;AgB1xBI;;EjBoCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACmwBJ;;AgBjyBE;EjB8BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACuxBJ;;AgBlzBE;EjB2BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC2yBJ;;AgBn0BE;EjBwBE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC+zBJ;;AiBrGE;;ElB1tBE;ACo0BJ;AiBqkBI;;ElBz4CA;ACw0BJ;;AgBl1BI;;;EAGE;AhBq1BN;;AF54BI;EC8DA;EAAA;EAAA;ACo1BJ;;AgB70BE;;EjBPE;ACy1BJ;;AgBt0BM;EACE;AhBy0BR;AgB/zBM;EACE;AhBi0BR;;AF95BI;EC8DA;EAAA;EAAA;EAAA;EAAA;ACu2BJ;;AS92BE;EACE,gBA7BO;ATk5BX;AS92BE;EACE;ATg3BJ;AS12BE;EAEE;;qEAAA;EAGA;AT22BJ;AS16BE;EACE;EACA;AT46BJ;AS97BE;EACE;EACA;ATg8BJ;AS77BE;EAEE;EACA;AT87BJ;ASx2BI;EACI;AT02BR;;AFr8BI;EC8DA;EAAA;EAAA;AC64BJ;;AkBj8BE;EnBoDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC65BJ;AkB98BI;EnBiDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC46BJ;AkBz9BI;EnB6CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC27BJ;AkBp+BI;EnByCA;EAAA;AC+7BJ;AkBp+BI;EnBqCA;EAAA;ACm8BJ;AkBp+BI;EnBiCA;EAAA;ACu8BJ;;AkBt8BE;EnBDE;AC28BJ;;AFzgCI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACq9BJ;;AmBpgCM;EpB+CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC6/BJ;AmBxiCM;EpB2CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACghCJ;AaxjCE;EdwCE;ACmhCJ;AmBrjCM;EAEE;AnBsjCR;;AFplCI;EC8DA;AC0hCJ;;AoBhhCE;ErBVE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACoiCJ;AoBvhCI;ErBbA;EAAA;EAAA;ACyiCJ;AoBxhCI;ErBjBA;EAAA;EAAA;AC8iCJ;AoBzhCI;ErBrBA;EAAA;EAAA;ACmjCJ;;AoBzhCE;ErB1BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC+jCJ;AoBliCI;ErB7BA;EAAA;EAAA;EAAA;ACqkCJ;AoBpiCI;ErBjCA;EAAA;EAAA;EAAA;AC2kCJ;AoBtiCI;ErBrCA;EAAA;EAAA;EAAA;ACilCJ;;AoBviCE;ErB1CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC8lCJ;AoBjjCI;ErB7CA;EAAA;EAAA;EAAA;AComCJ;AoBnjCI;ErBjDA;EAAA;EAAA;EAAA;AC0mCJ;AoBrjCI;ErBrDA;EAAA;EAAA;EAAA;ACgnCJ;AoBnjCM;ErB7DF;ACmnCJ;AoBljCM;ErBjEF;ACsnCJ;;AoB/iCE;ErBvEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACkoCJ;AoBxjCI;ErB1EA;EAAA;EAAA;EAAA;ACwoCJ;AoB1jCI;ErB9EA;EAAA;EAAA;EAAA;AC8oCJ;AoB5jCI;ErBlFA;EAAA;EAAA;EAAA;ACopCJ;;AoBnjCE;ErBjGE;ACwpCJ;;AoBjjCE;ErBvGE;AC4pCJ;;AoB/iCE;ErB7GE;ACgqCJ;;AoB7iCE;ErBnHE;ACoqCJ;;AqBltCE;EtB8CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC8qCJ;AqBztCI;EtB2CA;EAAA;EAAA;ACmrCJ;AqB1tCI;EtBuCA;EAAA;EAAA;ACwrCJ;AqB3tCI;EtBmCA;EAAA;EAAA;AC6rCJ;;AqBtsCE;EtBSE;EsBGA;EACA;EACA;ArB+rCJ;;AFlwCI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACysCJ;AsB1uCM;;EvBiCF;EAAA;EAAA;EAAA;AC4tCJ;AsBzvCM;;EvB6BF;EAAA;EAAA;EAAA;ACmuCJ;AsB5vCM;;EvByBF;EAAA;EAAA;EAAA;AC0uCJ;;AFxyCI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC8uCJ;AuB7xCM;ExB+CF;ACixCJ;AuB3zCM;ExB0CF;ACoxCJ;;AwBtwCE;EACE;AxBywCJ;AwBnwCI;EACE;AxBqwCN;;AwBjwCE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EzBpCA;EAAA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;ACmzCJ;AyB/0CI;ED2EE;EACA;AxBuwCN;;AwBnwCE;EzBpDE;EAAA;AC4zCJ;;AwBjwCE;EACE;AxBowCJ;;AwBjwCE;;EAEE;AxBowCJ;;AwB/vCE;EAEE;AxBiwCJ;;AwB33CE;EACE,WAdS;EAeT,YAfS;EAgBT,iBAhBS;EzBmDP;EOZF;EPwBA;ACk1CJ;AwBv3CE;EACE;AxBy3CJ;AwBt3CE;EACE;AxBw3CJ;AwBr3CE;EACE;AxBu3CJ;AwBp3CE;EACE;EACA;AxBs3CJ;AwBn3CE;EACE;AxBq3CJ;AwBl3CE;EACE;EACA;AxBo3CJ;AwBh3CI;EACE;AxBk3CN;AwB/2CI;EACE;EACA;AxBi3CN;AwB92CI;EACE;AxBg3CN;AwB72CI;EACE;EACA;AxB+2CN;;AwBt6CE;EACE,WAfW;EAgBX,YAhBW;EAiBX,iBAjBW;AxB07Cf;AwB/5CE;EACE;AxBi6CJ;AwB95CE;EACE;AxBg6CJ;AwB75CE;EACE;AxB+5CJ;AwB55CE;EACE;EACA;AxB85CJ;AwB35CE;EACE;AxB65CJ;AwB15CE;EACE;EACA;AxB45CJ;AwBx5CI;EACE;AxB05CN;AwBv5CI;EACE;EACA;AxBy5CN;AwBt5CI;EACE;AxBw5CN;AwBr5CI;EACE;EACA;AxBu5CN;;AwB98CE;EACE,WAbS;EAcT,YAdS;EAeT,iBAfS;EzBkDP;EOZF;EPwBA;ACq6CJ;AwB18CE;EACE;AxB48CJ;AwBz8CE;EACE;AxB28CJ;AwBx8CE;EACE;AxB08CJ;AwBv8CE;EACE;EACA;AxBy8CJ;AwBt8CE;EACE;AxBw8CJ;AwBr8CE;EACE;EACA;AxBu8CJ;AwBn8CI;EACE;AxBq8CN;AwBl8CI;EACE;EACA;AxBo8CN;AwBj8CI;EACE;AxBm8CN;AwBh8CI;EACE;EACA;AxBk8CN;;AFrgDI;EC8DA;EAAA;EAAA;EAAA;AC88CJ;;AwB92CE;EzBhGE;EAAA;ACm9CJ;;AwB92CE;EzBrGE;EAAA;ACw9CJ;;AFthDI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC49CJ;;A0BpgDI;E3BwCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC8iDJ;A0BllDI;E3BoCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC0jDJ;;A0BxlDI;E3B8BA;AC8jDJ;A0BtlDI;E3BwBA;ACikDJ;;AqB1kDE;EtBSE;EsBGA;EACA;EACA;ArBmkDJ;A2B/iDI;EACE;A3BijDN;;AFzoDI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC+kDJ;;A4BxoDI;E7ByDA;ACgnDJ;A4BrqDI;E7BqDA;ACmnDJ;A4BpqDI;E7BiDA;ACsnDJ;;AFprDI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC0nDJ;A6B1rDI;E9BgEA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACiqDJ;A6B5tDI;E9B2DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AC0qDJ;;AFxuDI;EC8DA;EAAA;EAAA;EAAA;AC8qDJ;;A8B7tDM;E/B+CF;EAAA;AC4rDJ;A8BvuDM;E/B2CF;EAAA;ACgsDJ;A8BvuDM;E/BuCF;EAAA;ACosDJ;;AFlwDI;EC8DA;EAAA;EAAA;EAAA;EAAA;ACysDJ;;AA1oDA;A+B7IA;AAAA;;;CAAA;AAAA;;;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;;EAAA;AAAA;AAAA;;;;;;;CAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;;;CAAA;AAAA;EAAA;EAAA;AAAA;AAAA;;;;CAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;UAAA;AAAA;AAAA;;CAAA;AAAA;;;;;;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;;EAAA;AAAA;AAAA;;;CAAA;AAAA;;;;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;;;;CAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAAA;;;;CAAA;AAAA;;;;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;;EAAA;AAAA;AAAA;;;CAAA;AAAA;;;;EAAA;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;;EAAA;AAAA;AAAA;;;CAAA;AAAA;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;;CAAA;AAAA;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;;;;;;;;;;;;;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;;;EAAA;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;;CAAA;AAAA;;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;;EAAA;AAAA;AAAA;;CAAA;AAAA;EAAA;AAAA;AAAA;;;;CAAA;AAAA;;;;;;;;EAAA;EAAA;AAAA;AAAA;;CAAA;AAAA;;EAAA;EAAA;AAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;AAAA;AAAA;EAAA;EAAA;EAAA;UAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;ACAA;EAAA;AAAA;AAAA;;EAAA;IAAA;EAAA;AAAA;AAAA;;EAAA;IAAA;EAAA;AAAA;AAAA;;EAAA;IAAA;EAAA;AAAA;AAAA;;EAAA;IAAA;EAAA;AAAA;AAAA;;EAAA;IAAA;EAAA;AAAA;ACAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;EAAA;AAAA;ACAA;EACE;EACA;EAGA;EACA;EACA;AlCmzDF;AkChzDA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAIA;AlC8yDF;AkCjzDE;;EACE;AlCozDJ;;AkC/yDA;EACE;AlCkzDF;;AkChzDA;EACE;AlCmzDF;;AkCjzDA;EACE;AlCozDF;;AkClzDA;EACE;AlCqzDF;;AkCnzDA;EACE;AlCszDF;;AkCpzDA;EACE;AlCuzDF;;AkCrzDA;EACE;AlCwzDF;;AkCtzDA;EACE;AlCyzDF;;AkCvzDA;EACE;AlC0zDF;;AkCxzDA;EACE;AlC2zDF;;AkCzzDA;EACE;AlC4zDF;;AkC1zDA;EACE;AlC6zDF;;AkC3zDA;EACE;AlC8zDF;;AkC5zDA;EACE;AlC+zDF;;AkC7zDA;EACE;AlCg0DF;;AkC9zDA;EACE;AlCi0DF;;AkC/zDA;EACE;AlCk0DF;;AkCh0DA;EACE;AlCm0DF;;AkCj0DA;EACE;AlCo0DF;;AkCl0DA;EACE;AlCq0DF;;AkCn0DA;EACE;AlCs0DF;;AkCp0DA;EACE;AlCu0DF;;AkCr0DA;EACE;AlCw0DF;;AkCt0DA;EACE;AlCy0DF;;AkCv0DA;EACE;AlC00DF;;AkCx0DA;EACE;AlC20DF;;AkCz0DA;EACE;AlC40DF;;AkC10DA;EACE;AlC60DF;;AkC30DA;EACE;AlC80DF;;AkC50DA;EACE;AlC+0DF;;AkC70DA;EACE;AlCg1DF;;AkC90DA;EACE;AlCi1DF;;AkC/0DA;EACE;AlCk1DF;;AkCh1DA;EACE;AlCm1DF;;AkCj1DA;EACE;AlCo1DF;;AkCl1DA;EACE;AlCq1DF;;AkCn1DA;EACE;AlCs1DF;;AkCp1DA;EACE;AlCu1DF;;AkCr1DA;EACE;AlCw1DF;;AkCt1DA;EACE;AlCy1DF;;AkCv1DA;EACE;AlC01DF;;AkCx1DA;EACE;AlC21DF;;AkCz1DA;EACE;AlC41DF;;AkC11DA;EACE;AlC61DF;;AkC31DA;EACE;AlC81DF;;AkC51DA;EACE;AlC+1DF;;AkC71DA;EACE;AlCg2DF;;AkC91DA;EACE;AlCi2DF;;AkC/1DA;EACE;AlCk2DF;;AkCh2DA;EACE;AlCm2DF;;AkCj2DA;EACE;AlCo2DF;;AkCl2DA;EACE;AlCq2DF;;AkCn2DA;EACE;AlCs2DF;;AkCp2DA;EACE;AlCu2DF;;AkCr2DA;EACE;AlCw2DF;;AkCt2DA;EACE;AlCy2DF;;AkCv2DA;EACE;AlC02DF;;AkCx2DA;EACE;AlC22DF;;AkCz2DA;EACE;AlC42DF;;AkC12DA;EACE;AlC62DF;;AkC32DA;EACE;AlC82DF;;AkC52DA;EACE;AlC+2DF;;AkC72DA;EACE;AlCg3DF;;AkC92DA;EACE;AlCi3DF;;AkC/2DA;EACE;AlCk3DF;;AkCh3DA;EACE;AlCm3DF;;AkCj3DA;EACE;AlCo3DF;;AkCl3DA;EACE;AlCq3DF;;AkCn3DA;EACE;AlCs3DF;;AkCp3DA;EACE;AlCu3DF;;AkCr3DA;EACE;AlCw3DF;;AkCt3DA;EACE;AlCy3DF;;AkCv3DA;EACE;AlC03DF;;AkCx3DA;EACE;AlC23DF;;AkCz3DA;EACE;AlC43DF;;AkC13DA;EACE;AlC63DF;;AkC33DA;EACE;AlC83DF;;AkC53DA;EACE;AlC+3DF;;AkC73DA;EACE;AlCg4DF;;AkC93DA;EACE;AlCi4DF;;AkC/3DA;EACE;AlCk4DF;;AkCh4DA;EACE;AlCm4DF;;AkCj4DA;EACE;AlCo4DF;;AkCl4DA;EACE;AlCq4DF;;AkCn4DA;EACE;AlCs4DF;;AkCp4DA;EACE;AlCu4DF;;AkCr4DA;EACE;AlCw4DF;;AkCt4DA;EACE;AlCy4DF;;AkCv4DA;EACE;AlC04DF;;AkCx4DA;EACE;AlC24DF;;AkCz4DA;EACE;AlC44DF;;AkC14DA;EACE;AlC64DF;;AkC34DA;EACE;AlC84DF;;AkC54DA;EACE;AlC+4DF;;AkC74DA;EACE;AlCg5DF;;AkC94DA;EACE;AlCi5DF;;AkC/4DA;EACE;AlCk5DF;;AkCh5DA;EACE;AlCm5DF;;AkCj5DA;EACE;AlCo5DF;;AkCl5DA;EACE;AlCq5DF;;AkCn5DA;EACE;AlCs5DF;;AkCp5DA;EACE;AlCu5DF;;AkCr5DA;EACE;AlCw5DF;;AkCt5DA;EACE;AlCy5DF;;AkCv5DA;EACE;AlC05DF;;AkCx5DA;EACE;AlC25DF;;AkCz5DA;EACE;AlC45DF;;AkC15DA;EACE;AlC65DF;;AkC35DA;EACE;AlC85DF;;AkC55DA;EACE;AlC+5DF;;AkC75DA;EACE;AlCg6DF;;AkC95DA;EACE;AlCi6DF;;AkC/5DA;EACE;AlCk6DF;;AkCh6DA;EACE;AlCm6DF;;AkCj6DA;EACE;AlCo6DF;;AkCl6DA;EACE;AlCq6DF;;AkCn6DA;EACE;AlCs6DF;;AkCp6DA;EACE;AlCu6DF;;AmC9xEE;EAAA;AAAA;;AAGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;EAAA;AAAA;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AnCmyEJ;AmCjyEE;EACE;EACA;AnCmyEJ;AmClyEI;EACE;EACA;EACA;AnCoyEN;AmChyEE;EACE;EACA;AnCkyEJ;AmCjyEI;EACE;EACA;EACA;AnCmyEN;AmC/xEE;EACE;EACA;AnCiyEJ;AmChyEI;EACE;EACA;EACA;AnCkyEN;AmC9xEE;EACE;EACA;AnCgyEJ;AmC/xEI;EACE;EACA;EACA;AnCiyEN;;AmC5xEE;EAAA;EAAA;EAAA;AAAA;;AC1DA;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;;EAAA;AAAA;;AAFF;;EAIE;ApC81EF;;AoC11EE;EAAA;AAAA;;AAGA;EAAA;EAAA;EAAA;EAAA;EAAA;EACA;EACA;EACA;AAHA;AAKE;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACA;EACA;EACA;AAHA;AAKF;EACE;ApCi2EN;AoC71EI;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAIF;EAAA;EAAA;AAAA;;AAAA;EAAA;AAAA;;AADF;EAEE;ApCg2EF;;AoC91EA;EACE;ApCi2EF;;AoC/1EA;EACE;ApCk2EF;;AoCh2EA;EACE;ApCm2EF;;AoCj2EA;EACE;ApCo2EF;;AoCl2EA;EACE;ApCq2EF;;AoCn2EA;EACE;ApCs2EF;;AoCp2EA;EACE;EACA;ApCu2EF;;AoC71EE;;;;;;;;EAAA;EACA;EACA;AAFA;;AAIF;EACE;ApCy2EF;;AoCv2EA;EACE;ApC02EF;;AoCv2EE;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAEE;EAAA;AAAA;AAGJ;EACE;ApC42EJ;;AoCx2EE;EAAA;AAAA;;AAIA;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;;EAAA;EAAA;AAAA;AAEE;;EAAA;EAAA;AAAA;AAEE;;EAAA;AAAA;AAIF;;EAAA;AAAA;AAGJ;;EACE;ApCm3EJ;;AoCh3EA;EAGI;;IACE;EpCk3EJ;AACF;AoC92EE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;AAEE;EAAA;AAAA;;AAMA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;EACA;EAAA;AADA;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAGJ;EACE;ApCg3EJ;AoC72EI;EAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;AAAA;;AAMF;;EAAA;EAAA;EAAA;EAAA;EAAA;EAEA;EACA;AAHA;;AAQA;;EAAA;EAAA;EAEA;EACA;AAHA;;AAOA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;EAAA;AAAA;;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAIF;EACE;ApC42EF;;AoC12EA;EACE;ApC62EF;;AoC32EA;EACE;ApC82EF;;AoCx2EE;;EAAA;EAAA;AAAA;;AAME;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAMF;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;AAAA;;AA6CJ;EAAA;AAAA;;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;EAAA;AAAA;AAEE;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAIF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;EAAA;AAAA;;AAKJ;EAAA;EAAA;EAAA;AAAA;;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAGE;EAAA;EAAA;EAAA;EAAA;EACA;AADA;;AAKJ;EACE;EACA;EACA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ApCm0EF;;AoCh0EA;EACE;EACA;ApCm0EF;;AoCj0EA;EACE;ApCo0EF;;AoCj0EE;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;AAAA;;AAIF;EAAA;AAAA;;AAGA;EAAA;EAAA;AAAA;;AAGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAKF;EAAA;EAAA;EAAA;AAAA;;AAGF;EACE;EACA;ApCw0EF;;AoCt0EA;;EAEE;ApCy0EF;;AoCt0EE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;EAAA;AAAA;;AAGJ;EACE;EACA;EACA;EACA;ApC20EF;;AoCz0EA;;EAEE;ApC40EF;;AoCv0EI;EAAA;EAAA;AAAA;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ApC40EN;;AoCx0EA;;EAEE;EACA;EACA;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCx0EA;;EAEE;EACA;EACA;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCx0EA;;EAEE;EACA;EACA;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCx0EA;;EAEE;EACA;EACA;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCx0EA;EACE;ApC20EF;;AoCv0EE;EAAA;EAAA;AAAA;;AAIA;EAAA;AAAA;;AAAA;;EAAA;AAAA;;AAAA;EAAA;;IAAA;EAAA;AAAA;;AAAA;;EAAA;IAAA;EAAA;AAAA;;AClbF;EACE;IACE;IACA;ErCgwFF;AACF;AsCpwFA;EACE;AtCswFF;;AsCnwFA;EACE;AtCswFF;;AsCnwFA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EAGA;EACA;EACA;AtCswFF;;AsCnwFA;EACE;AtCswFF;;AsCnwFA;EACE;AtCswFF;;AsCnwFA;EACE;AtCswFF;;AsCnwFA;EACE;EACA;AtCswFF;;AsCnwFA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;AtCswFF;;AsCnwFA;EACE;AtCswFF;;AsCnwFA;EACE;AtCswFF;;AsCnwFA;;EAEE;EACA;EACA;AtCswFF;;AsCnwFA;EACE;AtCswFF;;AsCnwFA;;EAEE;EACA;EACA;EACA;EACA;AtCswFF;;AsCnwFA;;EAEE;AtCswFF;;AsCnwFA;;EAEE;EACA;AtCswFF;;AsCnwFA;;;EAGE;EACA;EACA;AtCswFF;;AsCnwFA;;EAEE;EACA;AtCswFF;;AsCnwFA;;EAEE;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AtCswFF;AsCrwFE;;EACE;AtCwwFJ;AsCtwFE;;EACE;EACA;AtCywFJ;;AsCrwFA;EACE;AtCwwFF;;AsCrwFA;EACE;AtCwwFF;;AsCtwFA;EACE;AtCywFF;;AsCvwFA;EACE;AtC0wFF;;AsCpwFA;EACE;AtCuwFF;;AsCzvFA;EACE;AtC4vFF;;AsCxvFA;EACE;EACA;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;EACA;EACA;EACA;EACA;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EAGE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AtC2vFF;;AsCxvFA;;EAEE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;EAGA;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;EACA;EACA;EACA;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AtC2vFF;;AsCxvFA;EACE;EACA;EACA;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;AtC2vFF;;AsCxvFA;EACE;EACA;EACA;EACA;AtC2vFF;;AsCvvFE;EAAA;EAAA;AAAA;;AC9VF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AvC4lGF;;AuCzlGE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;AvC4lGJ;AuC1lGE;EACE;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC3lGI;EACE;AvC6lGN;AuC3lGI;EACE;AvC6lGN;AuC1lGE;EACE;EACA;EACA;EACA;EACA;AvC4lGJ;AuC3lGI;EACE;EACA;EACA;EACA;AvC6lGN;AuC3lGI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AvC6lGN;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC3lGI;EACE;EACA;EACA;EACA;AvC6lGN;AuC3lGI;EACE;EACA;EACA;AvC6lGN;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;EACA;AvC4lGJ;AuC1lGE;EACE;EACA;AvC4lGJ;AuCxlGM;EACE;AvC0lGR;AuCxlGM;EACE;AvC0lGR;AuCxlGM;EACE;AvC0lGR;AuCtlGE;EACE;EACA;EACA;AvCwlGJ;AuCtlGE;EACE;EACA;EACA;AvCwlGJ;AuCtlGE;EACE;AvCwlGJ;AuCtlGE;EACE;AvCwlGJ;AuCvlGI;EACE;AvCylGN;AuCxlGM;EACE;AvC0lGR;AuCtlGM;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AvCwlGR;AuCvlGQ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AvCylGV;AuCvlGQ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AvCylGV;AuCrlGQ;EACE;EACA;AvCulGV;AuCrlGQ;EACE;AvCulGV;AuCplGM;EACE;AvCslGR;AuCllGE;EACE;EACA;EACA;EACA;AvColGJ;AuCllGE;EACE;EACA;EACA;EACA;EACA;EACA;AvColGJ;AuCnlGI;EACE;EACA;EACA;EACA;AvCqlGN;AuCllGE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;AvColGJ;AuCllGE;EA8BE;EACA;AvCujGJ;AuCrlGI;EACE;AvCulGN;AuCrlGI;EACE;EACA;EACA;EACA;EACA;EACA;AvCulGN;AuCtlGM;EACE;EACA;EACA;AvCwlGR;AuCtlGM;EACE;EACA;EACA;EACA;EACA;AvCwlGR;AuCrlGI;EACE;AvCulGN;AuCrlGI;EACE;AvCulGN;AuCnlGI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AvCqlGN;AuCllGE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AvColGJ;AuCnlGI;EACE;EACA;EACA;AvCqlGN;AuCllGE;EACE;EACA;EACA;EACA;AvColGJ;AuCllGE;EACE;AvColGJ;AuCnlGI;EACE;AvCqlGN;AuCplGM;EACE;AvCslGR;AuCrlGQ;EACE;AvCulGV;AuCtlGU;EACE;AvCwlGZ;AuCllGE;EACE;AvColGJ;AuCnlGI;EACE;AvCqlGN;AuCplGM;EACE;AvCslGR;AuCrlGQ;EACE;AvCulGV;AuCllGE;EACE;EACA;AvColGJ;;AuChlGE;EACE;EACA;AvCmlGJ;AuChlGI;EACE;AvCklGN;;AuC5kGI;EACE;AvC+kGN;;AuC3kGA;EAEI;IACE;EvC6kGJ;EuC5kGI;IACE;EvC8kGN;AACF;AuCxkGE;;;EAGE;EACA;EACA;EACA;AvC0kGJ;AuCxkGE;;EAEE;AvC0kGJ;AuCxkGE;;EAEE;EACA;AvC0kGJ;AuCxkGE;;EAEE;EACA;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;;EAEE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;;;;EAIE;AvC0kGJ;AuCxkGE;;EAEE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;EACA;AvC0kGJ;AuCxkGE;EACE;EACA;EACA;EACA;EACA;AvC0kGJ;AuCxkGE;EACE;EACA;EACA;EACA;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;;EAEE;AvC0kGJ;AuCxkGE;EACE;EACA;EACA;EACA;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCxkGE;EACE;AvC0kGJ;AuCrkGE;EACE;EACA;EACA;AvCukGJ;AuCrkGI;EACE;AvCukGN;AuCpkGE;EACE;;;;;;;;IAQE;IACA;IACA;IACA;IACA;IACA;EvCskGJ;AACF;AFhlHI;EAAA,oBEglHJ;EFhlHI;AEglHJ;AFhlHI;EAAA,8BEglHJ;EFhlHI;AEglHJ;AFhlHI;;EAAA;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;AAAA;AFhlHI;;EAAA;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA,4BEglHJ;IFhlHI;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;AAAA;AFhlHI;;EAAA;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;AAAA;AFhlHI;;EAAA;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;;EFhlHI;IAAA;EEglHJ;AAAA,C;;;;AwChmHA;EACE;EAIA;EAEA;AAFF;;AAME;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;EACA;AADA;;AAKJ;EACE;EAIA;EAEA;AALF;AAME;EACE;EACA;AAJJ;;AASE;EAAA;EAAA;EAAA;AAAA;AAEE;EAAA;AAAA;;AAKF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA;AAEE;EAAA;EAAA;EAAA;AAAA;;AAIJ;EACE;AALF,C","sources":["./node_modules/@angular/material/core/style/_sass-utils.scss","./node_modules/@material/theme/_css.scss","./libs/theme/src/styles.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@material/linear-progress/_linear-progress-theme.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@material/dom/_dom.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-density.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@material/form-field/_form-field.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@angular/material/button/_fab-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/button/_button-base.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/tailwindcss/base.css","./node_modules/tailwindcss/components.css","./node_modules/tailwindcss/utilities.css","./libs/theme/src/lib/scss/font.scss","./libs/theme/src/lib/scss/material.scss","./libs/theme/src/lib/scss/global.scss","./libs/theme/src/lib/scss/md.scss","./libs/theme/src/lib/scss/questions.scss","./libs/theme/src/lib/scss/ckeditor-content.scss","./apps/student/src/styles.scss"],"sourcesContent":["@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Include content under the current selector (&) or the document root if there is no current\n/// selector.\n/// @param {String} $root [html] The default root selector to use when there is no current selector.\n/// @output The given content under the current selector, or root selector if there is no current\n///     selector.\n/// @content Content to output under the current selector, or root selector if there is no current\n///     selector.\n@mixin current-selector-or-root($root: html) {\n  @if & {\n    @content;\n  }\n  @else {\n    #{$root} {\n      @content;\n    }\n  }\n}\n\n/// A version of the standard `map.merge` function that takes a variable number of arguments.\n/// Each argument is merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.merge\n/// @return {Map} The combined result of successively calling map.merge with each parameter.\n@function merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.merge($result, $map);\n  }\n  @return $result;\n}\n\n/// A version of the standard `map.deep-merge` function that takes a variable number of arguments.\n/// Each argument is deep-merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.deep-merge\n/// @return {Map} The combined result of successively calling map.deep-merge with each parameter.\n@function deep-merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.deep-merge($result, $map);\n  }\n  @return $result;\n}\n\n/// Coerces the given value to a list, by converting any non-list value into a single-item list.\n/// This should be used when dealing with user-passed lists of args to avoid confusing errors,\n/// since Sass treats `($x)` as equivalent to `$x`.\n/// @param {Any} $value The value to coerce to a list.\n/// @return {List} The original $value if it was a list, otherwise a single-item list containing\n///     $value.\n@function coerce-to-list($value) {\n  @return if(meta.type-of($value) != 'list', ($value,), $value);\n}\n\n/// A version of the Sass `color.change` function that is safe ot use with CSS variables.\n@function safe-color-change($color, $args...) {\n  $args: meta.keywords($args);\n  @return if(meta.type-of($color) == 'color', color.change($color, $args...), $color);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","// Custom Theming for Angular Material\r\n// For more information: https://material.angular.io/guide/theming\r\n@use '@angular/material' as mat;\r\n// Plus imports for other components in your app.\r\n\r\n// Include the common styles for Angular Material. We include this here so that you only\r\n// have to load a single css file for Angular Material in your app.\r\n// Be sure that you only ever include this mixin once!\r\n// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.\r\n//  The following line adds:\r\n//    1. Default typography styles for all components\r\n//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)\r\n//  If you specify typography styles for the components you use elsewhere, you should delete this line.\r\n//  If you don't need the default component typographies but still want the hierarchy styles,\r\n//  you can delete this line and instead use:\r\n//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`\r\n// @include mat.all-legacy-component-typographies();\r\n// @include mat.legacy-core();\r\n\r\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\r\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\r\n// hue. Available color palettes: https://material.io/design/color/\r\n$md-blueGrey: (\r\n  50: #e6e8eb,\r\n  100: #c0c5ce,\r\n  200: #969ead,\r\n  300: #6b778c,\r\n  400: #4c5a74,\r\n  500: #2c3d5b,\r\n  600: #273753,\r\n  700: #212f49,\r\n  800: #1b2740,\r\n  900: #101a2f,\r\n  A100: #e4f1f9,\r\n  A200: #74b2df,\r\n  A400: #4186c7,\r\n  A700: #2b518f,\r\n  contrast: (\r\n    50: #000000,\r\n    100: #000000,\r\n    200: #000000,\r\n    300: #ffffff,\r\n    400: #ffffff,\r\n    500: #ffffff,\r\n    600: #ffffff,\r\n    700: #ffffff,\r\n    800: #ffffff,\r\n    900: #ffffff,\r\n    A100: #000000,\r\n    A200: #ffffff,\r\n    A400: #ffffff,\r\n    A700: #ffffff,\r\n  ),\r\n);\r\n$md-red: (\r\n  50: #fde9e9,\r\n  100: #fac7c7,\r\n  200: #f7a2a2,\r\n  300: #f47c7c,\r\n  400: #f16060,\r\n  500: #ef4444,\r\n  600: #ed3e3e,\r\n  700: #eb3535,\r\n  800: #e82d2d,\r\n  900: #e41f1f,\r\n  A100: #ffffff,\r\n  A200: #ffe7e7,\r\n  A400: #ffb4b4,\r\n  A700: #ff9b9b,\r\n  contrast: (\r\n    50: #000000,\r\n    100: #000000,\r\n    200: #000000,\r\n    300: #000000,\r\n    400: #000000,\r\n    500: #ffffff,\r\n    600: #ffffff,\r\n    700: #ffffff,\r\n    800: #ffffff,\r\n    900: #ffffff,\r\n    A100: #000000,\r\n    A200: #000000,\r\n    A400: #000000,\r\n    A700: #000000,\r\n  ),\r\n);\r\n$md-orange: (\r\n  50: #ffeee0,\r\n  100: #fed5b3,\r\n  200: #fdb980,\r\n  300: #fc9c4d,\r\n  400: #fc8726,\r\n  500: #fb7200,\r\n  600: #fa6a00,\r\n  700: #fa5f00,\r\n  800: #f95500,\r\n  900: #f84200,\r\n  A100: #ffffff,\r\n  A200: #ffefeb,\r\n  A400: #ffc7b8,\r\n  A700: #ffb29f,\r\n  contrast: (\r\n    50: #000000,\r\n    100: #000000,\r\n    200: #000000,\r\n    300: #000000,\r\n    400: #000000,\r\n    500: #000000,\r\n    600: #000000,\r\n    700: #000000,\r\n    800: #ffffff,\r\n    900: #ffffff,\r\n    A100: #000000,\r\n    A200: #000000,\r\n    A400: #000000,\r\n    A700: #000000,\r\n  ),\r\n);\r\n$student-primary: mat.define-palette($md-orange);\r\n$student-accent: mat.define-palette($md-blueGrey);\r\n\r\n// The warn palette is optional (defaults to red).\r\n$student-warn: mat.define-palette($md-red);\r\n\r\n// Create the theme object. A theme consists of configurations for individual\r\n// theming systems such as \"color\" or \"typography\".\r\n$student-theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $student-primary,\r\n      accent: $student-accent,\r\n      warn: $student-warn,\r\n    ),\r\n  )\r\n);\r\n\r\n// Include theme styles for core and each component used in your app.\r\n// Alternatively, you can import and @include the theme mixins for each component\r\n// that you are using.\r\n@include mat.all-component-themes($student-theme);\r\n\r\n/* You can add global styles to this file, and also import other style files */\r\n@import 'tailwindcss/base';\r\n@import 'tailwindcss/components';\r\n@import 'tailwindcss/utilities';\r\n@layer base {\r\n  :root,\r\n  ::after {\r\n    --color-primaryBlue: theme('colors.primaryBlue');\r\n    --color-orange: theme('colors.orange');\r\n    --color-lightBlue-1: theme('colors.lightBlue.1');\r\n    --color-lightOrange-1: theme('colors.lightOrange.1');\r\n    --color-blueGrey-300: theme('colors.blueGrey.300');\r\n    --color-blueGrey-400: theme('colors.blueGrey.400');\r\n    --color-blueGrey-500: theme('colors.blueGrey.500');\r\n    --color-blueGrey-700: theme('colors.blueGrey.700');\r\n    --color-white: theme('colors.white');\r\n  }\r\n}\r\n\r\n@import 'libs/theme/src/lib/scss/font.scss';\r\n@import 'libs/theme/src/lib/scss/material.scss';\r\n@import 'libs/theme/src/lib/scss/global.scss';\r\n@import 'libs/theme/src/lib/scss/md.scss';\r\n@import 'libs/theme/src/lib/scss/lg.scss';\r\n@import 'libs/theme/src/lib/scss/questions.scss';\r\n@import 'libs/theme/src/lib/scss/ckeditor-content.scss';\r\n","@use '../tokens/m2/mat/option' as tokens-mat-option;\n@use '../tokens/token-utils';\n@use '../style/sass-utils';\n\n@use '../theming/theming';\n@use '../theming/inspection';\n@use '../typography/typography';\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme));\n  }\n\n  .mat-accent {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme, accent));\n  }\n\n  .mat-warn {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '../../theming/theming';\n@use '../../theming/inspection';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move pseudo checkbox base tokens here\n}\n\n@mixin color($theme) {\n  $is-dark-theme: inspection.get-theme-type($theme) == dark;\n  $primary: inspection.get-theme-color($theme, primary);\n  $accent: inspection.get-theme-color($theme, accent);\n  $warn: inspection.get-theme-color($theme, warn);\n  $background: inspection.get-theme-color($theme, background, background);\n  $secondary-text: inspection.get-theme-color($theme, foreground, secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin _density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include _density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use './theming/theming';\n@use './theming/inspection';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin base($theme) {\n  @include ripple-theme.base($theme);\n  @include option-theme.base($theme);\n  @include optgroup-theme.base($theme);\n  @include pseudo-checkbox-theme.base($theme);\n  // TODO(mmalerba): Move additional core base tokens here\n}\n\n@mixin color($theme) {\n  @include ripple-theme.color($theme);\n  @include option-theme.color($theme);\n  @include optgroup-theme.color($theme);\n  @include pseudo-checkbox-theme.color($theme);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    background-color: inspection.get-theme-color($theme, background, background);\n    color: inspection.get-theme-color($theme, foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include option-theme.typography($theme);\n  @include optgroup-theme.typography($theme);\n  @include pseudo-checkbox-theme.typography($theme);\n  @include ripple-theme.typography($theme);\n}\n\n@mixin density($theme) {\n  @include option-theme.density($theme);\n  @include optgroup-theme.density($theme);\n  @include ripple-theme.density($theme);\n\n  // TODO(mmalerba): add density mixins for these.\n  // @include pseudo-checkbox-theme.density($theme);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme) {\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/linear-progress' as tokens-mdc-linear-progress;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-linear-progress-theme.theme(tokens-mdc-linear-progress.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  $color-tokens: tokens-mdc-linear-progress.get-color-tokens($theme, $palette-name);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  // We also can't set the `track-color` by creating our own token slot because the track-color\n  // is set in the SVG string in `theme-styles`.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: map.get($color-tokens, track-color),\n  ));\n\n  @include mdc-linear-progress-theme.theme($color-tokens);\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    .mat-mdc-progress-bar {\n      @include _palette-styles($theme, primary);\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-linear-progress-theme.theme(map.get($tokens, tokens-mdc-linear-progress.$prefix));\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:string';\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 4px,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n  track-shape: 0px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include buffering-keyframes(map.get($theme, track-height), $query);\n  @include bar-color(map.get($theme, active-indicator-color), $query);\n  @include buffer-color(map.get($theme, track-color), $query);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        height,\n        'max(track-height, bar-height)',\n        $replace: (\n          track-height: map.get($theme, track-height),\n          bar-height: map.get($theme, active-indicator-height)\n        )\n      );\n\n      @include dom.ie11-support() {\n        $track-height: map.get($theme, track-height);\n        $track-height: if(\n          custom-properties.is-custom-prop($track-height),\n          custom-properties.get-fallback($track-height),\n          $track-height\n        );\n\n        $bar-height: map.get($theme, active-indicator-height);\n        $bar-height: if(\n          custom-properties.is-custom-prop($bar-height),\n          custom-properties.get-fallback($bar-height),\n          $bar-height\n        );\n\n        @if ($track-height != null) and\n          ($bar-height != null) and\n          (not custom-properties.is-custom-prop-string($track-height)) and\n          (not custom-properties.is-custom-prop-string($bar-height))\n        {\n          @include theme.property(height, math.max($track-height, $bar-height));\n        }\n      }\n    }\n  }\n\n  @include _bar-height(map.get($theme, active-indicator-height), $query);\n  @include _track-height(map.get($theme, track-height), $query);\n  @include _track-shape(map.get($theme, track-shape), $query);\n\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $concrete-color: $color;\n  @if custom-properties.is-custom-prop($color) {\n    $concrete-color: custom-properties.get-fallback($color);\n  }\n  $concrete-color-for-svg: str-replace_(\n    string.unquote('#{$concrete-color}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      @media (forced-colors: active) {\n        background-color: ButtonBorder;\n      }\n\n      @include dom.ie11-support() {\n        background-color: transparent;\n        // stylelint-disable function-url-quotes -- SVG data URI\n        // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n        @include theme.property(\n          background-image,\n          url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='concrete-color-for-svg'/%3E%3C/svg%3E\"),\n          $replace: (concrete-color-for-svg: $concrete-color-for-svg)\n        );\n        // stylelint-enable function-url-quotes\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n/// @deprecated Use Theming API instead.\n@mixin bar-and-track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n\n  @include _bar-height($height, $query);\n  @include _track-height($height, $query);\n}\n\n@mixin buffering-keyframes($track-height, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-linear-progress-buffering {\n      from {\n        // Normally the buffer dots start from the left and overflow to the right.\n        // We rotate by 180deg so that the buffer dots start on the right when\n        // in non-reversed mode and overflow to the left.\n        @include rtl.ignore-next-line();\n        @include theme.property(\n          transform,\n          'rotate(180deg) translateX(calc(track-height * -2.5))',\n          $replace: (track-height: $track-height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n\n@mixin _bar-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__bar {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__bar-inner {\n      @include theme.property(border-top-width, $height);\n    }\n  }\n}\n\n@mixin _track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__buffer-dots {\n      @include dom.ie11-support() {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n@mixin _track-shape($shape, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(border-radius, $shape);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    @include rtl.ignore-next-line();\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","@use '@material/textfield/filled-text-field-theme' as mdc-filled-text-field-theme;\n@use '@material/textfield/outlined-text-field-theme' as mdc-outlined-text-field-theme;\n\n@use '../core/tokens/m2/mdc/filled-text-field' as tokens-mdc-filled-text-field;\n@use '../core/tokens/m2/mdc/outlined-text-field' as tokens-mdc-outlined-text-field;\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use './form-field-density';\n\n@mixin base($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(\n        tokens-mdc-filled-text-field.$prefix,\n        tokens-mdc-filled-text-field.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mdc-outlined-text-field.$prefix,\n        tokens-mdc-outlined-text-field.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-form-field.$prefix,\n        tokens-mat-form-field.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-color-tokens($theme));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-color-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-color-tokens($theme));\n  }\n\n  .mat-mdc-form-field.mat-accent {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($theme, accent));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($theme, accent));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.private-get-color-palette-color-tokens($theme, accent));\n  }\n\n  .mat-mdc-form-field.mat-warn {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($theme, warn));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($theme, warn));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.private-get-color-palette-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-typography-tokens($theme));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  @include form-field-density.private-form-field-density($theme);\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/theming/inspection';\n\n@use './form-field-sizing';\n\n// Mixin that sets the vertical spacing for the infix container of filled form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-filled($with-label-padding, $no-label-padding) {\n  .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n    padding-top: map.get($with-label-padding, top);\n    padding-bottom: map.get($with-label-padding, bottom);\n  }\n\n  .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)\n  .mat-mdc-form-field-infix {\n    padding-top: map.get($no-label-padding, top);\n    padding-bottom: map.get($no-label-padding, bottom);\n  }\n}\n\n// Mixin that sets the vertical spacing for the infix container of outlined form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-outlined($padding) {\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n    padding-top: map.get($padding, top);\n    padding-bottom: map.get($padding, bottom);\n  }\n}\n\n// Mixin that includes the density styles for form fields. MDC provides their own density\n// styles for MDC text-field which we cannot use. MDC relies on input elements to stretch\n// vertically when the height is reduced as per density scale. This doesn't work for our\n// form field since we support custom form field controls without a fixed height. Instead, we\n// provide spacing that makes arbitrary controls align as specified in the Material Design\n// specification. In order to support density, we need to adjust the vertical spacing to be\n// based on the density scale.\n@mixin private-form-field-density($theme) {\n  // Height of the form field that is based on the current density scale.\n  $height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: inspection.get-theme-density($theme),\n    $property-name: height,\n  );\n\n  // Whether floating labels for filled form fields should be hidden. MDC hides the label in\n  // their density styles when the height decreases too much. We match their density styles.\n  $hide-filled-floating-label: $height < mdc-textfield.$minimum-height-for-filled-label;\n  // We computed the desired height of the form-field using the density configuration. The\n  // spec only describes vertical spacing/alignment in non-dense mode. This means that we\n  // cannot update the spacing to explicit numbers based on the density scale. Instead, we\n  // determine the height reduction and equally subtract it from the default `top` and `bottom`\n  // padding that is provided by the Material Design specification.\n  $vertical-deduction: math.div(mdc-textfield.$height - $height, 2);\n  // Map that describes the padding for form-fields with label.\n  $with-label-padding: (\n    top: form-field-sizing.$mat-form-field-with-label-input-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-with-label-input-padding-bottom - $vertical-deduction,\n  );\n  // Map that describes the padding for form-fields without label.\n  $no-label-padding: (\n    top: form-field-sizing.$mat-form-field-no-label-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-no-label-padding-bottom - $vertical-deduction,\n  );\n\n  // We add a minimum height to the infix container in order to ensure that custom controls have\n  // the same default vertical space as text-field inputs (with respect to the vertical padding).\n  .mat-mdc-form-field-infix {\n    min-height: $height;\n  }\n\n  // By default, MDC aligns the label using percentage. This will be overwritten based\n  // on whether a textarea is used. This is not possible in our implementation of the\n  // form-field because we do not know what type of form-field control is set up. Hence\n  // we always use a fixed position for the label. This does not have any implications.\n  .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n    top: math.div($height, 2);\n  }\n\n  // For the outline appearance, we re-create the active floating label transform. This is\n  // necessary because the transform for docked floating labels can be updated to account for\n  // the width of prefix container.\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded\n  .mdc-floating-label--float-above {\n    --mat-mdc-form-field-label-transform: translateY(\n            -#{mdc-textfield.get-outlined-label-position-y($height)})\n            scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n    transform: var(--mat-mdc-form-field-label-transform);\n  }\n\n  // Add vertical spacing to the infix to ensure that outlined form fields have their controls\n  // aligned as if there is no label. This is done similarly in MDC and is specified in the\n  // Material Design specification. Outline form fields position the control as if there is no\n  // label. This is because the label overflows the form-field and doesn't need space at the top.\n  @include _infix-vertical-spacing-outlined($no-label-padding);\n\n  // MDC hides labels for filled form fields when the form field height decreases. We match\n  // this behavior in our custom density styles.\n  @if $hide-filled-floating-label {\n    // Update the spacing for filled form fields to account for the hidden floating label.\n    @include _infix-vertical-spacing-filled(\n          $no-label-padding, $no-label-padding);\n    .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n        display: none;\n    }\n  }\n  @else {\n    // By default, filled form fields align their controls differently based on whether there\n    // is a label or not. MDC does this too, but we cannot rely on their styles as we support\n    // arbitrary form field controls and MDC only applies their spacing to the `<input>` elements.\n    @include _infix-vertical-spacing-filled(\n          $with-label-padding, $no-label-padding);\n  }\n}\n","@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/tokens/m2/mat/select' as tokens-mat-select;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-color-tokens($theme));\n\n    .mat-mdc-form-field.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($theme, accent));\n    }\n\n    .mat-mdc-form-field.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($theme, warn));\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  // Density is clamped at -5 here, because MDC's form field throws an error for anything lower.\n  $form-field-height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: theming.clamp-density($density-scale, -5),\n    $property-name: height,\n  );\n\n  // On lower densities the filled form field hides its label which causes the label to\n  // be misaligned. Remove the additional offset that was added because of the label.\n  @if ($form-field-height < mdc-textfield.$minimum-height-for-filled-label) {\n    .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper {\n      transform: none;\n    }\n  }\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:color';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '../core/tokens/m2/mdc/chip' as tokens-mdc-chip;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme(tokens-mdc-chip.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  .mat-mdc-standard-chip {\n    $default-color-tokens: tokens-mdc-chip.get-color-tokens($theme);\n    @include mdc-chip-theme.theme($default-color-tokens);\n\n    &.mat-mdc-chip-selected,\n    &.mat-mdc-chip-highlighted {\n      &.mat-primary {\n        $primary-color-tokens: tokens-mdc-chip.get-color-tokens($theme, primary);\n        @include mdc-chip-theme.theme($primary-color-tokens);\n      }\n\n      &.mat-accent {\n        $accent-color-tokens: tokens-mdc-chip.get-color-tokens($theme, accent);\n        @include mdc-chip-theme.theme($accent-color-tokens);\n      }\n\n      &.mat-warn {\n        $warn-color-tokens: tokens-mdc-chip.get-color-tokens($theme, warn);\n        @include mdc-chip-theme.theme($warn-color-tokens);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $typography-tokens: tokens-mdc-chip.get-typography-tokens($theme);\n\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($theme) {\n  $density-tokens: tokens-mdc-chip.get-density-tokens($theme);\n\n  .mat-mdc-chip.mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($density-tokens);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/switch' as m2-mdc-switch;\n@use '../core/tokens/m2/mat/slide-toggle' as m2-mat-slide-toggle;\n@use '../core/tokens/token-utils';\n\n@mixin base($theme) {\n  .mdc-switch {\n    @include mdc-switch-theme.theme(m2-mdc-switch.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  $is-dark: inspection.get-theme-type($theme) == dark;\n  $mdc-switch-color-tokens: m2-mdc-switch.get-color-tokens($theme);\n\n  @include mdc-helpers.using-mdc-theme($theme) {\n    // Add values for MDC slide toggles tokens\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme($mdc-switch-color-tokens);\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: inspection.get-theme-color($theme, foreground, disabled-text);\n      }\n\n      // Change the color palette related tokens to accent or warn if applicable\n      &.mat-accent {\n        @include mdc-switch-theme.theme(\n            m2-mdc-switch.private-get-color-palette-color-tokens($theme, accent));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(\n            m2-mdc-switch.private-get-color-palette-color-tokens($theme, warn));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $mdc-switch-typography-tokens: m2-mdc-switch.get-typography-tokens($theme);\n  $mat-slide-toggle-typography-tokens: m2-mat-slide-toggle.get-typography-tokens($theme);\n\n  //Add values for MDC slide toggle tokens\n  .mat-mdc-slide-toggle {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-switch-theme.theme($mdc-switch-typography-tokens);\n    @include token-utils.create-token-values(\n      m2-mat-slide-toggle.$prefix,\n      $mat-slide-toggle-typography-tokens\n    );\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","//\n// Copyright 2023 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './form-field-theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include static-styles($query);\n\n  // TODO: Replace with call to theme-styles after Angular moves to Theming API\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mat/radio' as tokens-mat-radio;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-unthemable-tokens());\n      @include token-utils.create-token-values(\n          tokens-mat-radio.$prefix, tokens-mat-radio.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include mdc-helpers.using-mdc-theme($theme) {\n      .mat-mdc-radio-button {\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-mdc-radio-button {\n      &.mat-primary {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, primary));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme, primary));\n      }\n\n      &.mat-accent {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme));\n      }\n\n      &.mat-warn {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, warn));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme, warn));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-typography-tokens($theme));\n    }\n\n    .mat-mdc-radio-button {\n      @include mdc-helpers.using-mdc-typography($theme) {\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    $density-scale: inspection.get-theme-density($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($theme));\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-radio-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-radio-theme.theme(map.get($tokens, tokens-mdc-radio.$prefix));\n    @include token-utils.create-token-values(\n        tokens-mat-radio.$prefix, map.get($tokens, tokens-mat-radio.$prefix));\n  }\n}\n","@use 'sass:map';\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/slider' as tokens-mat-slider;\n@use '../core/tokens/m2/mdc/slider' as tokens-mdc-slider;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    $is-dark: inspection.get-theme-type($theme) == dark;\n\n    $mdc-color-tokens: token-utils.resolve-elevation(\n        tokens-mdc-slider.get-color-tokens($theme),\n        handle-elevation,\n        handle-shadow-color\n    );\n\n    $mat-slider-color-tokens: tokens-mat-slider.get-color-tokens($theme);\n\n  // Add values for MDC slider tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-slider-theme.theme($mdc-color-tokens);\n    @include _slider-ripple-color($theme, primary);\n    @include token-utils.create-token-values(\n      tokens-mat-slider.$prefix,\n      $mat-slider-color-tokens\n    );\n\n    .mat-accent {\n      @include mdc-slider-theme.theme(\n        tokens-mdc-slider.private-get-color-palette-color-tokens($theme, accent));\n      @include _slider-ripple-color($theme, accent);\n    }\n\n      .mat-warn {\n        @include mdc-slider-theme.theme(\n            tokens-mdc-slider.private-get-color-palette-color-tokens($theme, warn));\n        @include _slider-ripple-color($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    // Add values for MDC slider tokens.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-typography-tokens($theme));\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    // Add values for MDC slider tokens.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-density-tokens($theme));\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n// Generated MDC ripple color tokens are not being calculated so needs to be set\n@mixin _slider-ripple-color($theme, $palette-name) {\n  $color: inspection.get-theme-color($theme, $palette-name);\n\n  --mat-mdc-slider-ripple-color: #{$color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($color, 0.2)};\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-slider-theme.theme(map.get($tokens, tokens-mdc-slider.$prefix));\n    @include token-utils.create-token-values(\n        tokens-mat-slider.$prefix, map.get($tokens, tokens-mat-slider.$prefix));\n  }\n}\n","@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mdc/list' as tokens-mdc-list;\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  // Add default values for tokens not related to color, typography, or density.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme(tokens-mdc-list.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  $mdc-list-color-tokens: tokens-mdc-list.get-color-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, primary));\n  }\n\n  .mat-accent {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, accent));\n    }\n  }\n\n  .mat-warn {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, warn));\n    }\n  }\n\n  .mat-mdc-list-option {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, primary));\n  }\n  .mat-mdc-list-option.mat-accent {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, accent));\n  }\n  .mat-mdc-list-option.mat-warn {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, warn));\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color(inspection.get-theme-color($theme, primary));\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n  $mdc-list-density-tokens: tokens-mdc-list.get-density-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($theme));\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $mdc-list-typography-tokens: tokens-mdc-list.get-typography-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    font: inspection.get-theme-typography($theme, subtitle-1, font);\n    letter-spacing: inspection.get-theme-typography($theme, subtitle-1, letter-spacing);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.surface-styles($query: $query);\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab/tab-theme' as mdc-tab-theme;\n@use '../core/style/sass-utils';\n@use '../core/tokens/m2/mdc/tab' as tokens-mdc-tab;\n@use '../core/tokens/m2/mdc/tab-indicator' as tokens-mdc-tab-indicator;\n@use '../core/tokens/m2/mat/tab-header' as tokens-mat-tab-header;\n@use '../core/tokens/m2/mat/tab-header-with-background' as tokens-mat-tab-header-with-background;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n@mixin base($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-tab-indicator-theme.theme(tokens-mdc-tab-indicator.get-unthemable-tokens());\n    @include mdc-tab-theme.secondary-navigation-tab-theme(tokens-mdc-tab.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-tab-header.$prefix, tokens-mat-tab-header.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-tab-header-with-background.$prefix,\n        tokens-mat-tab-header-with-background.get-unthemable-tokens()\n    );\n  }\n}\n\n@mixin color($theme) {\n  .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n    @include _palette-styles($theme, primary);\n\n    &.mat-accent {\n      @include _palette-styles($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($theme, warn);\n    }\n\n    &.mat-background-primary {\n      @include _background-styles($theme, primary);\n    }\n\n    &.mat-background-accent {\n      @include _background-styles($theme, accent);\n    }\n\n    &.mat-background-warn {\n      @include _background-styles($theme, warn);\n    }\n  }\n}\n\n@mixin _background-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n    tokens-mat-tab-header-with-background.get-color-tokens($theme, $palette-name));\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include mdc-tab-theme.secondary-navigation-tab-theme(\n    tokens-mdc-tab.get-color-tokens($theme, $palette-name));\n  @include mdc-tab-indicator-theme.theme(\n    tokens-mdc-tab-indicator.get-color-tokens($theme, $palette-name));\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n   tokens-mat-tab-header.get-color-tokens($theme, $palette-name));\n}\n\n@mixin typography($theme) {\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-typography-tokens($theme));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-density-tokens($theme));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-density-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-density-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme));\n    }\n\n    .mat-mdc-checkbox {\n      &.mat-primary {\n        @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, primary));\n      }\n\n      &.mat-warn {\n        @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, warn));\n      }\n\n      @include mdc-helpers.using-mdc-theme($theme) {\n        // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      }\n\n      &.mat-mdc-checkbox-disabled label {\n        // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n        color: inspection.get-theme-color($theme, foreground, disabled-text);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-typography-tokens($theme));\n    }\n\n    .mat-mdc-checkbox {\n      @include mdc-helpers.using-mdc-typography($theme) {\n        // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-density-tokens($theme));\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-checkbox-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    // TODO(mmalerba): Some of the theme styles above are not represented in terms of tokens,\n    //   so this mixin is currently incomplete.\n    @include mdc-checkbox-theme.theme(map.get($tokens, tokens-mdc-checkbox.$prefix));\n  }\n}\n","@use '@material/button/button' as mdc-button;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/elevation/elevation-theme' as mdc-elevation-theme;\n\n@use './button-base';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/filled-button' as tokens-mdc-filled-button;\n@use '../core/tokens/m2/mat/filled-button' as tokens-mat-filled-button;\n@use '../core/tokens/m2/mdc/outlined-button' as tokens-mdc-outlined-button;\n@use '../core/tokens/m2/mat/outlined-button' as tokens-mat-outlined-button;\n@use '../core/tokens/m2/mdc/protected-button' as tokens-mdc-protected-button;\n@use '../core/tokens/m2/mat/protected-button' as tokens-mat-protected-button;\n@use '../core/tokens/m2/mdc/text-button' as tokens-mdc-text-button;\n@use '../core/tokens/m2/mat/text-button' as tokens-mat-text-button;\n\n\n@mixin _text-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-text-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-text-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-text-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-text-button.$prefix, $mat-tokens);\n}\n\n@mixin _filled-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-filled-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-filled-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-filled-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-filled-button.$prefix, $mat-tokens);\n}\n\n@mixin _protected-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-protected-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-protected-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-protected-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-protected-button.$prefix, $mat-tokens);\n}\n\n@mixin _outlined-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-outlined-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-outlined-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-outlined-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix, $mat-tokens);\n}\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move button base tokens here\n}\n\n@mixin color($theme) {\n  .mat-mdc-button {\n    @include _text-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _text-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _text-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _text-button-variant($theme, warn);\n    }\n  }\n\n  .mat-mdc-unelevated-button {\n    @include _filled-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _filled-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _filled-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _filled-button-variant($theme, warn);\n    }\n  }\n\n  .mat-mdc-raised-button {\n    @include _protected-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _protected-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _protected-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _protected-button-variant($theme, warn);\n    }\n\n    // TODO(wagnermaciel): Remove this workaround when b/301126527 is resolved\n    @include mdc-helpers.disable-mdc-fallback-declarations {\n      @include mdc-elevation-theme.elevation(2);\n\n      &:hover, &:focus {\n        @include mdc-elevation-theme.elevation(4);\n      }\n\n      &:active, &:focus:active {\n        @include mdc-elevation-theme.elevation(8);\n      }\n    }\n  }\n\n  .mat-mdc-outlined-button {\n    @include _outlined-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _outlined-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _outlined-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _outlined-button-variant($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include mdc-helpers.using-mdc-typography($theme) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: theming.clamp-density(inspection.get-theme-density($theme), -3);\n\n  .mat-mdc-button {\n    $density-tokens: tokens-mdc-text-button.get-density-tokens($theme);\n    @include mdc-button-text-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-raised-button {\n    $density-tokens: tokens-mdc-protected-button.get-density-tokens($theme);\n    @include mdc-button-protected-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-unelevated-button {\n    $density-tokens: tokens-mdc-filled-button.get-density-tokens($theme);\n    @include mdc-button-filled-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-outlined-button {\n    $density-tokens: tokens-mdc-outlined-button.get-density-tokens($theme);\n    @include mdc-button-outlined-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:math';\n@use '@material/density/functions' as mdc-density-functions;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '../core/tokens/m2/mdc/icon-button' as tokens-mdc-icon-button;\n@use '../core/tokens/m2/mat/icon-button' as tokens-mat-icon-button;\n\n@use './button-base';\n@use '../core/tokens/token-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move icon button base tokens here\n}\n\n@mixin _icon-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-icon-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-icon-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-icon-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-icon-button.get-color-tokens($theme)\n  );\n\n  @include mdc-icon-button-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-icon-button.$prefix, $mat-tokens);\n}\n\n@mixin color($theme) {\n  .mat-mdc-icon-button {\n    @include _icon-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _icon-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _icon-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _icon-button-variant($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {\n  $icon-size: 24px;\n  $density-scale: inspection.get-theme-density($theme);\n  // Manually apply the expected density theming, and include the padding\n  // as it was applied before\n  $calculated-size: mdc-density-functions.prop-value(\n    $density-config: (\n      size: (\n        default: 48px,\n        maximum: 48px,\n        minimum: 28px,\n      ),\n    ),\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    // Match the styles that used to be present. This is necessary for backwards\n    // compat to match the previous implementations selector count (two classes).\n    @include mdc-icon-button-theme.theme((\n      state-layer-size: $calculated-size,\n    ));\n\n    // TODO: Switch calculated-size to \"var(--mdc-icon-button-state-layer-size)\"\n    // Currently fails validation because the variable is \"undefined\"\n    // in the sass stack.\n    // TODO: Switch icon-size to \"var(--mdc-icon-button-icon-size)\". Currently\n    // fails validation because the variable is \"undefined\" in the sass stack.\n    width: var(--mdc-icon-button-state-layer-size);\n    height: var(--mdc-icon-button-state-layer-size);\n    padding: math.div($calculated-size - $icon-size, 2);\n\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/fab/extended-fab-theme' as mdc-extended-fab-theme;\n\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/fab' as tokens-mdc-fab;\n@use '../core/tokens/m2/mdc/extended-fab' as tokens-mdc-extended-fab;\n@use '../core/tokens/m2/mat/fab' as tokens-mat-fab;\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  // Add default values for tokens not related to color, typography, or density.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-fab-theme.theme(tokens-mdc-fab.get-unthemable-tokens());\n    @include mdc-extended-fab-theme.theme(\n      tokens-mdc-extended-fab.get-unthemable-tokens()\n    );\n  }\n}\n\n@mixin _fab-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-fab.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-fab.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-fab.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-fab.get-color-tokens($theme)\n  );\n\n  @include mdc-fab-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-fab.$prefix, $mat-tokens);\n}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include _fab-variant($theme, null);\n\n    .mat-mdc-fab,\n    .mat-mdc-mini-fab {\n      &.mat-primary {\n        @include _fab-variant($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _fab-variant($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _fab-variant($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include mdc-helpers.using-mdc-typography($theme) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n\n  $typography-tokens: tokens-mdc-extended-fab.get-typography-tokens($theme);\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-extended-fab-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/circular-progress' as tokens-mdc-circular-progress;\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-circular-progress-theme.theme(\n          tokens-mdc-circular-progress.get-unthemable-tokens()\n      );\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    $mdc-circular-progress-color-tokens: tokens-mdc-circular-progress.get-color-tokens($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-circular-progress-theme.theme($mdc-circular-progress-color-tokens);\n\n      .mat-accent {\n        $color: inspection.get-theme-color($theme, accent);\n        @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n      }\n\n      .mat-warn {\n        $color: inspection.get-theme-color($theme, warn);\n        @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-circular-progress-theme.theme(\n        map.get($tokens, tokens-mdc-circular-progress.$prefix));\n  }\n}\n","@use 'sass:color';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/badge' as tokens-mat-badge;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n// TODO(crisbeto): some of these variables aren't used anymore and should be deleted.\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Internally there are some builds that throw an error if they can't figure out the values\n// of CSS variables during compliation. This flag temporarily enables fallbacks for these builds.\n// Eventually we should clean them up.\n$_emit-fallback-vars: true;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size, $font-size-token) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n\n    @if ($font-size-token) {\n      @include token-utils.use-tokens(tokens-mat-badge.$prefix,\n        tokens-mat-badge.get-token-slots()) {\n        @include token-utils.create-token-slot(font-size, $font-size-token, $_emit-fallback-vars);\n      }\n    }\n  }\n\n  &.mat-badge-above .mat-badge-content {\n    top: math.div(-$size, 2);\n  }\n\n  &.mat-badge-below .mat-badge-content {\n    bottom: math.div(-$size, 2);\n  }\n\n  &.mat-badge-before .mat-badge-content {\n    left: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-before .mat-badge-content {\n    left: auto;\n    right: -$size;\n  }\n\n  &.mat-badge-after .mat-badge-content {\n    right: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-after .mat-badge-content {\n    right: auto;\n    left: -$size;\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before .mat-badge-content {\n      left: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-before .mat-badge-content {\n      left: auto;\n      right: math.div(-$size, 2);\n    }\n\n    &.mat-badge-after .mat-badge-content {\n      right: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-after .mat-badge-content {\n      right: auto;\n      left: math.div(-$size, 2);\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n\n    // The badge should make sure its host is overflow visible so that the badge content\n    // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n    // style `overflow: hidden` so this requires extra specificity so that it does not\n    // depend on style load order.\n    &.mat-badge {\n      overflow: visible;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, background-color);\n      @include token-utils.create-token-slot(color, text-color);\n      @include token-utils.create-token-slot(font-family, text-font, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-size, text-size, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-weight, text-weight, $_emit-fallback-vars);\n    }\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-disabled .mat-badge-content {\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, disabled-state-background-color);\n      @include token-utils.create-token-slot(color, disabled-state-text-color);\n    }\n  }\n\n  .mat-badge-hidden .mat-badge-content {\n    display: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size, small-size-text-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size, null);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size, large-size-text-size);\n  }\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-color-tokens($theme));\n  }\n\n  .mat-badge-accent {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($theme, accent));\n  }\n\n  .mat-badge-warn {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../core/tokens/m2/mat/datepicker' as tokens-mat-datepicker;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n@use '../core/typography/typography';\n@use '../button/icon-button-theme';\n\n// TODO(crisbeto): these variables aren't used anymore and should be removed.\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _calendar-color($theme, $palette-name) {\n  $palette-color: inspection.get-theme-color($theme, $palette-name);\n  $range-color: tokens-mat-datepicker.private-get-range-background-color($palette-color);\n  $range-tokens: tokens-mat-datepicker.get-range-color-tokens($range-color);\n  $calendar-tokens:\n    tokens-mat-datepicker.private-get-calendar-color-palette-color-tokens($theme, $palette-name);\n\n  @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n    map.merge($calendar-tokens, $range-tokens));\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-color-tokens($theme));\n  }\n\n  .mat-datepicker-content {\n    &.mat-accent {\n      @include _calendar-color($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _calendar-color($theme, warn);\n    }\n  }\n\n  .mat-datepicker-toggle-active {\n    &.mat-accent {\n      $accent-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($theme, accent);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $accent-tokens);\n    }\n\n    &.mat-warn {\n      $warn-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($theme, warn);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $warn-tokens);\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-typography-tokens($theme));\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: tokens-mat-datepicker.$private-default-comparison-color,\n  $overlap-color: tokens-mat-datepicker.$private-default-overlap-color,\n  $overlap-selected-color:\n    tokens-mat-datepicker.private-get-default-overlap-selected-color($overlap-color)) {\n  $tokens: tokens-mat-datepicker.get-range-color-tokens(\n    $range-color: $range-color,\n    $comparison-color: $comparison-color,\n    $overlap-color: $overlap-color,\n    $overlap-selected-color: $overlap-selected-color,\n  );\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $tokens);\n  }\n}\n\n@mixin density($theme) {\n  // TODO(crisbeto): move this into the structural styles\n  // once the icon button density is switched to tokens.\n\n  // Regardless of the user-passed density, we want the calendar\n  // previous/next buttons to remain at density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '@material/touch-target' as mdc-touch-target;\n\n@use '../core/tokens/token-utils';\n@use '../core/style/layout-common';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Adds styles necessary to provide stateful interactions with the button. This includes providing\n// content for the state container's ::before and ::after so that they can be given a background\n// color and opacity for states like hover, active, and focus. Additionally, adds styles to the\n// ripple and state container so that they fill the button, match the border radius, and avoid\n// pointer events.\n@mixin mat-private-button-interactive() {\n  -webkit-tap-highlight-color: transparent;\n\n  // The ripple container should match the bounds of the entire button.\n  .mat-mdc-button-ripple,\n  .mat-mdc-button-persistent-ripple,\n  .mat-mdc-button-persistent-ripple::before {\n    @include layout-common.fill;\n\n    // Disable pointer events for the ripple container and state overlay because the container\n    // will overlay the user content and we don't want to disable mouse events on the user content.\n    // Pointer events can be safely disabled because the ripple trigger element is the host element.\n    pointer-events: none;\n\n    // Inherit the border radius from the parent so that state overlay and ripples don't exceed the\n    // parent button boundaries. Note that an inherited border radius does not work properly if\n    // the actual button element does have a border because it causes the inner content to be\n    // smaller. We have special logic for stroked buttons to handle this scenario.\n    border-radius: inherit;\n  }\n\n  // This style used to be applied by the MatRipple\n  // directive, which is no longer attached to this element.\n  .mat-mdc-button-ripple {\n    overflow: hidden;\n  }\n\n  // We use ::before so that we can reuse some of MDC's theming.\n  .mat-mdc-button-persistent-ripple::before {\n    content: '';\n    opacity: 0;\n  }\n\n  // The content should appear over the state and ripple layers, otherwise they may adversely affect\n  // the accessibility of the text content.\n  .mdc-button__label {\n    z-index: 1;\n  }\n\n  // The focus indicator should match the bounds of the entire button.\n  .mat-mdc-focus-indicator {\n    @include layout-common.fill();\n  }\n\n  &:focus .mat-mdc-focus-indicator::before {\n    content: '';\n  }\n}\n\n@mixin mat-private-button-ripple($prefix, $slots) {\n  @include token-utils.use-tokens($prefix, $slots) {\n    .mat-ripple-element {\n      @include token-utils.create-token-slot(background-color, ripple-color);\n    }\n\n    .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(background-color, state-layer-color);\n    }\n\n    &:hover .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(opacity, hover-state-layer-opacity);\n    }\n\n    &.cdk-program-focused,\n    &.cdk-keyboard-focused {\n      .mat-mdc-button-persistent-ripple::before {\n        @include token-utils.create-token-slot(opacity, focus-state-layer-opacity);\n      }\n    }\n\n    &:active .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(opacity, pressed-state-layer-opacity);\n    }\n  }\n}\n\n// MDC's disabled buttons define a default cursor with pointer-events none. However, they select\n// :disabled for this, which does not affect anchor tags.\n// TODO(andrewseguin): Discuss with the MDC team about a mixin we can call for applying this style,\n// and note that having pointer-events may have unintended side-effects, e.g. allowing the user\n// to click the target underneath the button.\n@mixin mat-private-button-disabled() {\n  &[disabled] {\n    cursor: default;\n    pointer-events: none;\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin mat-private-button-touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin mat-private-button-touch-target($is-square) {\n  // Element used to ensure that the button has a touch target that meets the required minimum.\n  // Note that we use this, instead of MDC's built-in `mdc-button--touch` class, because the MDC\n  // class is implemented as `margin-top: 6px; margin-bottom: 6px` on the host element which\n  // goes against our rule of not having margins on the host node. Furthermore, having the margin on\n  // the button itself would require us to wrap it in another div. See:\n  // https://github.com/material-components/material-components-web/tree/master/packages/mdc-button#making-buttons-accessible\n  .mat-mdc-button-touch-target {\n    @include mdc-touch-target.touch-target(\n      $set-width: $is-square,\n      $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mat/icon' as tokens-mat-icon;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-colors($theme, $palette-name) {\n  $color: inspection.get-theme-color($theme, $palette-name, text);\n  $tokens: tokens-mat-icon.private-get-icon-color-tokens($color);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $tokens);\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-icon.$prefix,\n      tokens-mat-icon.get-color-tokens($theme));\n  }\n\n  .mat-icon {\n    &.mat-primary {\n      @include _palette-colors($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _palette-colors($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-colors($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n","@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/stepper' as tokens-mat-stepper;\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-color-tokens($theme));\n\n    .mat-step-header.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens($theme, accent));\n    }\n\n    .mat-step-header.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens($theme, warn));\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/toolbar' as tokens-mat-toolbar;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(\n    tokens-mat-toolbar.$prefix,\n    tokens-mat-toolbar.private-get-color-palette-color-tokens(\n      $background-color: inspection.get-theme-color($theme, $palette-name),\n      $text-color: inspection.get-theme-color($theme, $palette-name, default-contrast)\n    )\n  );\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-color-tokens($theme));\n    }\n\n    .mat-toolbar {\n      &.mat-primary {\n        @include _palette-styles($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    // TODO(mmalerba): Stop calling this and resolve resulting screen diffs.\n    $theme: inspection.private-get-typography-back-compat-theme($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-typography-tokens($theme));\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-density-tokens($theme));\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      map.get($tokens, tokens-mat-toolbar.$prefix));\n  }\n}\n","@tailwind base;\n","@tailwind components;\n","@tailwind utilities;\n","@font-face {\r\n  font-family: 'Kyons-Icon-Fonts';\r\n  src: url('/assets/kyons_fonts/Kyons-Icon-Fonts.ttf?g06j69') format('truetype'),\r\n    url('/assets/kyons_fonts/Kyons-Icon-Fonts.woff?g06j69') format('woff'),\r\n    url('/assets/kyons_fonts/Kyons-Icon-Fonts.svg?g06j69#Kyons-Icon-Fonts') format('svg');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  font-display: block;\r\n}\r\n\r\n[class^='icon-'],\r\n[class*=' icon-'] {\r\n  /* use !important to prevent issues with browser extensions that change fonts */\r\n  font-family: 'Kyons-Icon-Fonts' !important;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-variant: normal;\r\n  text-transform: none;\r\n  line-height: 1;\r\n\r\n  /* Better Font Rendering =========== */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  &::before {\r\n    vertical-align: middle;\r\n  }\r\n  @apply inline-flex;\r\n}\r\n\r\n.icon-Hanbook:before {\r\n  content: '\\e900';\r\n}\r\n.icon-Add:before {\r\n  content: '\\e901';\r\n}\r\n.icon-AddFriend:before {\r\n  content: '\\e902';\r\n}\r\n.icon-AddPhoto:before {\r\n  content: '\\e903';\r\n}\r\n.icon-Alarm:before {\r\n  content: '\\e904';\r\n}\r\n.icon-AlignCenter:before {\r\n  content: '\\e905';\r\n}\r\n.icon-AlignLeft:before {\r\n  content: '\\e906';\r\n}\r\n.icon-AlignRight:before {\r\n  content: '\\e907';\r\n}\r\n.icon-ArrowDown:before {\r\n  content: '\\e908';\r\n}\r\n.icon-ArrowDownStop:before {\r\n  content: '\\e909';\r\n}\r\n.icon-ArrowForward:before {\r\n  content: '\\e90a';\r\n}\r\n.icon-ArrowLeft:before {\r\n  content: '\\e90b';\r\n}\r\n.icon-ArrowLeftStop:before {\r\n  content: '\\e90c';\r\n}\r\n.icon-ArrowRight:before {\r\n  content: '\\e90d';\r\n}\r\n.icon-ArrowRightStop:before {\r\n  content: '\\e90e';\r\n}\r\n.icon-ArrowSelector:before {\r\n  content: '\\e90f';\r\n}\r\n.icon-ArrowUp:before {\r\n  content: '\\e910';\r\n}\r\n.icon-ArrowUpStop:before {\r\n  content: '\\e911';\r\n}\r\n.icon-BankTransfer:before {\r\n  content: '\\e912';\r\n}\r\n.icon-Birthday:before {\r\n  content: '\\e913';\r\n}\r\n.icon-Bookmark:before {\r\n  content: '\\e914';\r\n}\r\n.icon-BookmarkAdd:before {\r\n  content: '\\e915';\r\n}\r\n.icon-BookmarkRemove:before {\r\n  content: '\\e916';\r\n}\r\n.icon-BulletPoint:before {\r\n  content: '\\e917';\r\n}\r\n.icon-Calendar:before {\r\n  content: '\\e918';\r\n}\r\n.icon-CalendarViewDay:before {\r\n  content: '\\e919';\r\n}\r\n.icon-CalendarViewMonth:before {\r\n  content: '\\e91a';\r\n}\r\n.icon-CalendarViewWeek:before {\r\n  content: '\\e91b';\r\n}\r\n.icon-Call:before {\r\n  content: '\\e91c';\r\n}\r\n.icon-CallTutor:before {\r\n  content: '\\e91d';\r\n}\r\n.icon-Cancel:before {\r\n  content: '\\e91e';\r\n}\r\n.icon-Card:before {\r\n  content: '\\e91f';\r\n}\r\n.icon-Carousel:before {\r\n  content: '\\e920';\r\n}\r\n.icon-Cash:before {\r\n  content: '\\e921';\r\n}\r\n.icon-Chat:before {\r\n  content: '\\e922';\r\n}\r\n.icon-Check:before {\r\n  content: '\\e923';\r\n}\r\n.icon-Close:before {\r\n  content: '\\e924';\r\n}\r\n.icon-Crop:before {\r\n  content: '\\e925';\r\n}\r\n.icon-Delete:before {\r\n  content: '\\e926';\r\n}\r\n.icon-Document:before {\r\n  content: '\\e927';\r\n}\r\n.icon-Draw:before {\r\n  content: '\\e928';\r\n}\r\n.icon-Duplicate:before {\r\n  content: '\\e929';\r\n}\r\n.icon-Edit:before {\r\n  content: '\\e92a';\r\n}\r\n.icon-EditText:before {\r\n  content: '\\e92b';\r\n}\r\n.icon-Email:before {\r\n  content: '\\e92c';\r\n}\r\n.icon-Eraser:before {\r\n  content: '\\e92d';\r\n}\r\n.icon-Error:before {\r\n  content: '\\e92e';\r\n}\r\n.icon-Facebook:before {\r\n  content: '\\e92f';\r\n}\r\n.icon-Filter:before {\r\n  content: '\\e930';\r\n}\r\n.icon-Folder:before {\r\n  content: '\\e931';\r\n}\r\n.icon-FolderOpen:before {\r\n  content: '\\e932';\r\n}\r\n.icon-Google:before {\r\n  content: '\\e933';\r\n}\r\n.icon-Help:before {\r\n  content: '\\e934';\r\n}\r\n.icon-HintDocument:before {\r\n  content: '\\e935';\r\n}\r\n.icon-HintTutor:before {\r\n  content: '\\e936';\r\n}\r\n.icon-History:before {\r\n  content: '\\e937';\r\n}\r\n.icon-Home:before {\r\n  content: '\\e938';\r\n}\r\n.icon-Info:before {\r\n  content: '\\e939';\r\n}\r\n.icon-insertText:before {\r\n  content: '\\e93a';\r\n}\r\n.icon-Inventory:before {\r\n  content: '\\e93b';\r\n}\r\n.icon-Keyboard:before {\r\n  content: '\\e93c';\r\n}\r\n.icon-KeyboardHide:before {\r\n  content: '\\e93d';\r\n}\r\n.icon-Label:before {\r\n  content: '\\e93e';\r\n}\r\n.icon-LessonContent:before {\r\n  content: '\\e93f';\r\n}\r\n.icon-Lightbulb:before {\r\n  content: '\\e940';\r\n}\r\n.icon-LineWeight:before {\r\n  content: '\\e941';\r\n}\r\n.icon-Linkedin:before {\r\n  content: '\\e942';\r\n}\r\n.icon-Location:before {\r\n  content: '\\e943';\r\n}\r\n.icon-Lock:before {\r\n  content: '\\e944';\r\n}\r\n.icon-Map:before {\r\n  content: '\\e945';\r\n}\r\n.icon-MenuHamburger:before {\r\n  content: '\\e946';\r\n}\r\n.icon-MicOff:before {\r\n  content: '\\e947';\r\n}\r\n.icon-MicOn:before {\r\n  content: '\\e948';\r\n}\r\n.icon-Minimize:before {\r\n  content: '\\e949';\r\n}\r\n.icon-Momo:before {\r\n  content: '\\e94a';\r\n}\r\n.icon-More:before {\r\n  content: '\\e94b';\r\n}\r\n.icon-NewFolder:before {\r\n  content: '\\e94c';\r\n}\r\n.icon-NewLabel:before {\r\n  content: '\\e94d';\r\n}\r\n.icon-NewMeeting:before {\r\n  content: '\\e94e';\r\n}\r\n.icon-NoteManagement:before {\r\n  content: '\\e94f';\r\n}\r\n.icon-Notification:before {\r\n  content: '\\e950';\r\n}\r\n.icon-OpenNew:before {\r\n  content: '\\e951';\r\n}\r\n.icon-Paypal:before {\r\n  content: '\\e952';\r\n}\r\n.icon-Phone:before {\r\n  content: '\\e953';\r\n}\r\n.icon-Preview:before {\r\n  content: '\\e954';\r\n}\r\n.icon-Profile:before {\r\n  content: '\\e955';\r\n}\r\n.icon-ReadAll:before {\r\n  content: '\\e956';\r\n}\r\n.icon-Redo:before {\r\n  content: '\\e957';\r\n}\r\n.icon-Reload:before {\r\n  content: '\\e958';\r\n}\r\n.icon-Reset:before {\r\n  content: '\\e959';\r\n}\r\n.icon-Save:before {\r\n  content: '\\e95a';\r\n}\r\n.icon-Screenshot:before {\r\n  content: '\\e95b';\r\n}\r\n.icon-Search:before {\r\n  content: '\\e95c';\r\n}\r\n.icon-Send:before {\r\n  content: '\\e95d';\r\n}\r\n.icon-Settings:before {\r\n  content: '\\e95e';\r\n}\r\n.icon-Share:before {\r\n  content: '\\e95f';\r\n}\r\n.icon-Shop:before {\r\n  content: '\\e960';\r\n}\r\n.icon-Sidebar:before {\r\n  content: '\\e961';\r\n}\r\n.icon-SignOut:before {\r\n  content: '\\e962';\r\n}\r\n.icon-Sort:before {\r\n  content: '\\e963';\r\n}\r\n.icon-Submit:before {\r\n  content: '\\e964';\r\n}\r\n.icon-Subscription:before {\r\n  content: '\\e965';\r\n}\r\n.icon-Subtract:before {\r\n  content: '\\e966';\r\n}\r\n.icon-Swap:before {\r\n  content: '\\e967';\r\n}\r\n.icon-Test:before {\r\n  content: '\\e968';\r\n}\r\n.icon-TextBold:before {\r\n  content: '\\e969';\r\n}\r\n.icon-TextItalic:before {\r\n  content: '\\e96a';\r\n}\r\n.icon-TextUnderlined:before {\r\n  content: '\\e96b';\r\n}\r\n.icon-Thumbnail:before {\r\n  content: '\\e96c';\r\n}\r\n.icon-Tiktok:before {\r\n  content: '\\e96d';\r\n}\r\n.icon-Time:before {\r\n  content: '\\e96e';\r\n}\r\n.icon-Undo:before {\r\n  content: '\\e96f';\r\n}\r\n.icon-VideocamOff:before {\r\n  content: '\\e970';\r\n}\r\n.icon-VideocamOn:before {\r\n  content: '\\e971';\r\n}\r\n.icon-Visibility:before {\r\n  content: '\\e972';\r\n}\r\n.icon-VisibilityOff:before {\r\n  content: '\\e973';\r\n}\r\n.icon-Work:before {\r\n  content: '\\e974';\r\n}\r\n.icon-ZaloPay:before {\r\n  content: '\\e975';\r\n}\r\n","// @use '@angular/material' as mat;\r\n\r\n.mat-form-field-appearance-outline .mat-form-field-infix {\r\n  // @apply px-3 py-2 h-10;\r\n}\r\n.mat-form-field-appearance-outline .mat-form-field-wrapper {\r\n  @apply m-0;\r\n}\r\nbody .mat-tooltip {\r\n  @apply relative rounded-lg bg-primaryBlue text-white p-4 text-sm;\r\n\r\n  &::after {\r\n    width: 0;\r\n    height: 0;\r\n    content: '';\r\n    position: absolute;\r\n    border-left: 0.5rem solid transparent;\r\n    border-right: 0.5rem solid transparent;\r\n    border-bottom: 0.5rem solid var(--color-primaryBlue);\r\n  }\r\n  &.below {\r\n    overflow: initial;\r\n    margin-top: 1rem;\r\n    &:after {\r\n      top: -0.5rem;\r\n      right: calc(50% - 0.5rem);\r\n      transform: rotate(0);\r\n    }\r\n  }\r\n\r\n  &.above {\r\n    overflow: initial;\r\n    margin-bottom: 1rem;\r\n    &:after {\r\n      bottom: -0.4rem;\r\n      right: calc(50% - 0.5rem);\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n\r\n  &.right {\r\n    overflow: initial;\r\n    margin-left: 1rem;\r\n    &:after {\r\n      left: -0.7rem;\r\n      top: calc(50% - 0.25rem);\r\n      transform: rotate(270deg);\r\n    }\r\n  }\r\n\r\n  &.left {\r\n    overflow: initial;\r\n    margin-right: 1rem;\r\n    &:after {\r\n      right: -0.7rem;\r\n      top: calc(50% - 0.25rem);\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n}\r\n.mdc-data-table__header-cell {\r\n  @apply border-b-2 border-blueGrey-200 #{!important};\r\n}\r\n","// Design System\r\nhtml,\r\nbody {\r\n  @apply h-full m-0 p-0 text-[14px] bg-blueGrey-100 text-primaryBlue;\r\n\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\na {\r\n  @apply cursor-pointer;\r\n}\r\n.card {\r\n  @apply rounded-lg p-6 flex flex-col gap-6;\r\n  min-width: 324px;\r\n  min-height: 324px;\r\n  transition: all ease 0.2s;\r\n  &.extended {\r\n    @apply relative;\r\n    &::before {\r\n      @apply bg-blueGrey-50 absolute border-dashed border-orange border-2 w-full h-full rounded-lg top-0 left-0;\r\n      content: '';\r\n      display: block;\r\n      z-index: 0;\r\n    }\r\n    .card {\r\n      z-index: 1;\r\n    }\r\n  }\r\n  &:hover {\r\n    @apply border-orange shadow-3;\r\n  }\r\n}\r\nh1 {\r\n  @apply text-primaryBlue;\r\n  font-size: 36px;\r\n}\r\nh2 {\r\n  font-size: 32px;\r\n}\r\nh3 {\r\n  font-size: 28px;\r\n}\r\nh4 {\r\n  font-size: 24px;\r\n}\r\nh5 {\r\n  font-size: 22px;\r\n}\r\nh6 {\r\n  font-size: 18px;\r\n}\r\n.h7 {\r\n  font-size: 16px;\r\n}\r\n.h8 {\r\n  font-size: 14px;\r\n  font-weight: 800;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\n.h7,\r\n.h8 {\r\n  @apply m-0 font-bold;\r\n  font-weight: 700;\r\n  line-height: 150%;\r\n}\r\np {\r\n  margin-bottom: 0.625rem;\r\n}\r\nsmall {\r\n  font-size: 0.75rem;\r\n}\r\na:not(.btn):not(.btn-rounded):not(.menu-item):not(.icon-btn):not(.drop-menu-item) {\r\n  @apply text-orange underline outline-offset-4;\r\n  &.active[routerlinkactive='active'] {\r\n    @apply text-primaryBlue;\r\n    svg > path {\r\n      @apply stroke-primaryBlue;\r\n    }\r\n  }\r\n  &.no-underline {\r\n    text-decoration: none;\r\n  }\r\n}\r\n.svg.hover\\:stroke-orange:hover > path {\r\n  @apply stroke-orange;\r\n}\r\n.btn,\r\n.btn-rounded {\r\n  @apply rounded-md h-[40px] px-[20px] flex items-center justify-center cursor-pointer border whitespace-nowrap gap-2 font-[600];\r\n  &.btn-icon {\r\n    @apply w-[40px] h-[40px];\r\n    &.btn-large {\r\n      @apply w-[48px] h-[48px];\r\n      i {\r\n        @apply text-[24px];\r\n      }\r\n    }\r\n    i {\r\n      @apply text-[16px];\r\n    }\r\n  }\r\n  &.hidden {\r\n    display: none;\r\n  }\r\n}\r\n@media screen and (min-width: 768px) {\r\n  .btn,\r\n  .btn-rounded {\r\n    &.hidden.md\\:flex {\r\n      display: flex;\r\n    }\r\n  }\r\n}\r\n.icon-btn {\r\n  @apply text-orange w-[24px] h-[24px] flex items-center justify-center no-underline text-[24px];\r\n  i {\r\n    @apply text-[24px];\r\n  }\r\n}\r\n\r\n.btn {\r\n  &.secondary {\r\n    @apply bg-white text-orange border border-blueGrey-300;\r\n    &:hover {\r\n      @apply border-orange;\r\n    }\r\n    &:active {\r\n      @apply text-orange;\r\n      @apply border-orange;\r\n    }\r\n    &:disabled {\r\n      @apply bg-white text-blueGrey-300 border-blueGrey-300 #{!important};\r\n    }\r\n  }\r\n  &:hover {\r\n    box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n  &:hover:active {\r\n    @apply shadow-none;\r\n  }\r\n  &:disabled {\r\n    @apply text-blueGrey-400 border-blueGrey-200 cursor-not-allowed hover:shadow-none #{!important};\r\n  }\r\n}\r\n\r\n.btn.btn-small,\r\n.btn-rounded.btn-small {\r\n  @apply px-1 py-2 h-[32px];\r\n\r\n  font-size: 0.875rem;\r\n  line-height: 100%;\r\n}\r\n\r\n.btn.btn-large,\r\n.btn-rounded.btn-large {\r\n  @apply p-5 h-[48px];\r\n\r\n  font-size: 0.875rem;\r\n  line-height: 100%;\r\n}\r\n\r\n.btn.secondary:not(:disabled) {\r\n  @apply bg-lightBlue-1 border-lightBlue-1 text-white;\r\n}\r\n\r\nselect {\r\n  @apply bg-white border border-blueGrey-400 rounded-md;\r\n}\r\n\r\n// Tailwindcss helper\r\n.pb-full {\r\n  padding-bottom: 100%;\r\n}\r\n.w-110full {\r\n  width: calc(100% + 1.25rem);\r\n}\r\n.h-110full {\r\n  height: calc(100% + 1.25rem);\r\n}\r\n\r\n// Form\r\ninput,\r\nbutton {\r\n  @apply border-solid inline-flex;\r\n}\r\ninput {\r\n  &[type='text'],\r\n  &[type='password'],\r\n  &[type='number'] {\r\n    @apply h-[40px] border border-blueGrey-400 rounded-md shadow-none outline-none;\r\n    &:focus {\r\n      @apply outline-none shadow-none ring-offset-0 ring-0 border-primaryBlue #{!important};\r\n    }\r\n  }\r\n}\r\nform:not(.no-validate) {\r\n  input.ng-dirty.ng-invalid:not(.no-validate) {\r\n    @apply border-red-0;\r\n    &::placeholder {\r\n      @apply text-red-0;\r\n    }\r\n  }\r\n}\r\n// input[type='radio'] + label span {\r\n//   transition: all 0.2s, transform 0.2s;\r\n// }\r\n\r\n// input[type='radio'] + label span:hover,\r\n// input[type='radio'] + label:hover span {\r\n//   transform: scale(1.2);\r\n// }\r\n\r\n// input[type='radio']:checked + label span {\r\n//   @apply bg-lightBlue-1;\r\n//   box-shadow: 0 0 0 0.125rem white inset;\r\n// }\r\n\r\n// input[type='radio']:checked + label {\r\n//   @apply text-lightBlue-1;\r\n// }\r\n// input:read-only {\r\n//   @apply border-blueGrey-300 text-blueGrey-400;\r\n// }\r\n\r\n// input[type='radio'] {\r\n//   width: 16px;\r\n//   height: 17px;\r\n//   -webkit-appearance: none;\r\n//   -o-appearance: none;\r\n//   appearance: none;\r\n//   outline: none;\r\n//   cursor: pointer;\r\n//   display: flex;\r\n//   flex-shrink: 0;\r\n//   border: none;\r\n//   margin-left: 2px;\r\n//   margin-top: 4px;\r\n//   margin-right: 6px;\r\n//   &:checked {\r\n//     background: url('/assets/images/radio_off.svg') no-repeat;\r\n//   }\r\n// }\r\n\r\np {\r\n  @apply mb-4;\r\n}\r\n\r\n.btn {\r\n  @apply bg-orange text-white border-orange;\r\n  &:active {\r\n    @apply text-lightOrange-3;\r\n  }\r\n  &:hover {\r\n    @apply shadow-1;\r\n  }\r\n  &:disabled {\r\n    @apply bg-blueGrey-200 text-blueGrey-400 border-blueGrey-200;\r\n  }\r\n}\r\n.btn-rounded {\r\n  @apply bg-white text-orange border-blueGrey-300;\r\n  &:active {\r\n    @apply border-orange text-orange;\r\n  }\r\n  &:hover {\r\n    @apply shadow-1;\r\n  }\r\n  &:disabled {\r\n    @apply border-blueGrey-300 text-blueGrey-300 bg-white;\r\n    &:hover {\r\n      @apply shadow-none cursor-not-allowed;\r\n    }\r\n  }\r\n}\r\n.error {\r\n  @apply px-3 mt-1;\r\n}\r\n\r\n.mydp {\r\n  @apply border-black border rounded-md border-r-2 #{!important};\r\n\r\n  input[ngtype='text'] {\r\n    @apply py-2 px-3;\r\n    font-family: 'Montserrat', sans-serif !important;\r\n  }\r\n}\r\n\r\n.small-card {\r\n  width: 256px;\r\n  height: 256px;\r\n  @apply rounded-md items-center text-blueGrey-400 flex p-6 flex-shrink-0 transition-shadow ease-linear;\r\n}\r\n\r\n.carousel-caption {\r\n  top: 5.625rem;\r\n  color: var(--primaryBlue);\r\n}\r\n.mat-table {\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\ntable {\r\n  @apply rounded-tl-[4px] rounded-tr-[4px] overflow-hidden;\r\n  thead > tr > th.mat-header-cell {\r\n    @apply bg-primaryBlue text-white font-bold;\r\n  }\r\n}\r\n.cdk-overlay-container .mat-dialog-container {\r\n  @apply rounded-lg;\r\n}\r\n.col {\r\n  @apply flex flex-col;\r\n}\r\n.menu-item {\r\n  @apply flex items-center text-blueGrey-500 gap-2 border border-transparent rounded-lg bg-transparent px-2 font-bold cursor-pointer;\r\n  &.active {\r\n    @apply border-lightBlue-1 bg-lightBlue-6 text-lightBlue-1;\r\n  }\r\n}\r\n\r\n.caption {\r\n  @apply text-xs uppercase;\r\n}\r\n\r\n.hide-scrollbar {\r\n  -ms-overflow-style: none; /* Internet Explorer 10+ */\r\n  scrollbar-width: none; /* Firefox */\r\n}\r\n.hide-scrollbar::-webkit-scrollbar,\r\n.katex-html {\r\n  display: none; /* Safari and Chrome */\r\n}\r\n.tab-menu {\r\n  @apply h-[40px] flex items-center justify-center text-blueGrey-500 rounded-2xl cursor-pointer font-bold px-2 py-[10px];\r\n  &.active {\r\n    @apply bg-lightBlue-5 text-lightBlue-1;\r\n  }\r\n}\r\n.line-clamp-3 {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\nobject,\r\nsvg {\r\n  pointer-events: none;\r\n}\r\n\r\n.tooltip-wrapper {\r\n  .tooltip-container {\r\n    @apply relative z-[100];\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      width: 0;\r\n      height: 0;\r\n      box-sizing: border-box;\r\n      border: 4px solid var(--color-lightBlue-1);\r\n      transform-origin: 0 0;\r\n      transform: rotate(-45deg);\r\n      z-index: 0;\r\n    }\r\n  }\r\n}\r\n.caret-left::before,\r\n.caret-left::after {\r\n  margin-left: -6px;\r\n  top: calc(50% - 3px);\r\n  left: 0;\r\n}\r\n\r\n.caret-left::before {\r\n  box-shadow: -2px 2px 4px 0 rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.caret-left::after {\r\n  border-color: #fff transparent transparent #fff;\r\n}\r\n\r\n.caret-right::before,\r\n.caret-right::after {\r\n  top: calc(50% - 3px);\r\n  right: 0;\r\n  margin-right: -3px;\r\n}\r\n\r\n.caret-right::before {\r\n  box-shadow: -2px 2px 4px 0 rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.caret-right::after {\r\n  border-color: transparent #fff #fff transparent;\r\n}\r\n\r\n.caret-up::before,\r\n.caret-up::after {\r\n  left: 50%;\r\n  top: 0;\r\n  left: var(--caret-left);\r\n}\r\n\r\n.caret-up::before {\r\n  box-shadow: -2px 2px 4px 0 rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.caret-up::after {\r\n  border-color: #fff #fff transparent transparent;\r\n}\r\n\r\n.caret-down::before,\r\n.caret-down::after {\r\n  right: 50%;\r\n  top: 100%;\r\n  right: var(--caret-right);\r\n}\r\n\r\n.caret-down::before {\r\n  box-shadow: -2px 2px 4px 0 rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.caret-down::after {\r\n  border-color: transparent transparent #fff #fff;\r\n}\r\n\r\nkyonsvn-tutorial label.radio {\r\n  @apply bg-white;\r\n}\r\n\r\n.xs-hidden {\r\n  @apply hidden sm:flex;\r\n}\r\n","@media (min-width: 768px) {\r\n  .card-h-full {\r\n    height: calc(100vh - 11.5rem) !important;\r\n    overflow: auto;\r\n  }\r\n}\r\n",".question_block {\r\n  margin: 10px 0;\r\n}\r\n\r\n.question_block .question-text {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.select select {\r\n  background: #ffffff;\r\n  border: 1px solid #d0dae8;\r\n  box-sizing: border-box;\r\n  border-radius: 18px;\r\n  padding: 5px 10px;\r\n  width: 100%;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: radio-container;\r\n  appearance: none;\r\n  background: url('/assets/images/dropdown.svg') no-repeat right 10px center;\r\n  height: 37px;\r\n}\r\n\r\n.select select:required:invalid {\r\n  color: #939cc8;\r\n}\r\n\r\n.select select option[value=''][disabled] {\r\n  display: none;\r\n}\r\n\r\n.select select option {\r\n  color: black;\r\n}\r\n\r\n.question_step .question_block {\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.date,\r\n.time {\r\n  border: 1px solid #d0dae8;\r\n  box-sizing: border-box;\r\n  border-radius: 18px;\r\n  height: 37px;\r\n  width: 170px;\r\n  position: relative;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.date {\r\n  background: #fff url('/assets/images/icons/calendar.svg') left 10px center no-repeat;\r\n}\r\n\r\n.time {\r\n  background: #fff url('/assets/images/icons/time.svg') left 10px center no-repeat;\r\n}\r\n\r\n.date .placeholder,\r\n.time .placeholder {\r\n  position: absolute;\r\n  left: 40px;\r\n  top: 10px;\r\n}\r\n\r\n.placeholder {\r\n  color: #939cc8;\r\n}\r\n\r\n.date input[type='date'],\r\n.time input[type='time'] {\r\n  height: 37px;\r\n  opacity: 0;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.date input[type='date']::-webkit-inner-spin-button,\r\n.time input[type='time']::-webkit-inner-spin-button {\r\n  display: none;\r\n}\r\n\r\n.date input[type='date']::-webkit-calendar-picker-indicator,\r\n.time input[type='time']::-webkit-calendar-picker-indicator {\r\n  width: 100%;\r\n  background: transparent;\r\n}\r\n\r\n.checkbox,\r\n.radio,\r\n.nps-range label {\r\n  display: inline-flex;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.checkbox > span,\r\n.radio > span {\r\n  color: var(--content-color);\r\n  padding: 0.2rem 0.25rem;\r\n}\r\n\r\n.checkbox > input[type='checkbox'],\r\n.radio > input[type='radio'] {\r\n  width: 16px;\r\n  height: 16px;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  -o-appearance: none;\r\n  appearance: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  border: none;\r\n  margin-left: 2px;\r\n  margin-top: 4px;\r\n  margin-right: 6px;\r\n  box-shadow: none;\r\n  outline-offset: 0;\r\n  &:not(:focus) {\r\n    outline: none;\r\n  }\r\n  &:focus-visible {\r\n    border-radius: 4px;\r\n    outline: 1px solid var(--color-primaryBlue);\r\n  }\r\n}\r\n\r\n.radio > input[type='radio']:checked {\r\n  background: url('../../assets/images/radio_on.svg') no-repeat;\r\n}\r\n\r\n.checkbox > input[type='checkbox']:checked {\r\n  background: url('../../assets/images/checkbox_checked.svg') no-repeat;\r\n}\r\n.checkbox.dark > input[type='checkbox']:checked {\r\n  background: url('../../assets/images/checkbox_checked_dark.svg') no-repeat;\r\n}\r\n.checkbox > input[type='checkbox']:not(:checked) {\r\n  background: url('../../assets/images/checkbox_normal.svg') no-repeat;\r\n}\r\n// .checkbox > input[type='checkbox'].ng-dirty.ng-invalid:not(:checked) {\r\n//   background: url('../../assets/images/checkbox_error.svg') no-repeat;\r\n// }\r\n\r\n.radio > input[type='radio']:not(:checked) {\r\n  background: url('../../assets/images/radio_off.svg') no-repeat;\r\n}\r\n\r\n.checkbox > input[type='checkbox']:checked + span::before,\r\n.radio > input[type='radio']:checked + span::before {\r\n  // content: '';\r\n  // display: block;\r\n  // text-align: center;\r\n  // position: absolute;\r\n  // top: 3px;\r\n  // width: 16px;\r\n  // height: 17px;\r\n}\r\n\r\n.checkbox > input[type='checkbox']:checked + span::before {\r\n  left: 2px;\r\n  // background: url('/assets/images/checkbox_checked.svg') no-repeat;\r\n}\r\n\r\n.radio > input[type='radio']:checked + span::before {\r\n  left: 2px;\r\n  background: url('/assets/images/radio_on.svg') no-repeat;\r\n}\r\n\r\n.nps {\r\n  margin: 10px 0;\r\n}\r\n\r\n.nps-range {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-radius: 7.5px;\r\n  height: 15px;\r\n  position: relative;\r\n}\r\n\r\n.nps-range label {\r\n  position: absolute;\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.nps-range label:nth-child(1) > input[type='checkbox']:checked ~ span::before {\r\n  width: 100%;\r\n  left: 0;\r\n}\r\n\r\n.nps-range label:nth-child(1) {\r\n  width: 18%;\r\n  z-index: 5;\r\n}\r\n\r\n.nps-range label:nth-child(2) {\r\n  width: 38.5%;\r\n  z-index: 4;\r\n}\r\n\r\n.nps-range label:nth-child(3) {\r\n  width: 59%;\r\n  z-index: 3;\r\n}\r\n\r\n.nps-range label:nth-child(4) {\r\n  width: 79.5%;\r\n  z-index: 2;\r\n}\r\n\r\n.nps-range label:nth-child(5) {\r\n  width: 100%;\r\n  z-index: 1;\r\n}\r\n\r\n.nps-range label:nth-child(2) > input[type='checkbox']:checked ~ span::before {\r\n  width: 48%;\r\n}\r\n\r\n.nps-range input {\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  -o-appearance: none;\r\n  appearance: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  height: 15px;\r\n  border-radius: 2px;\r\n}\r\n\r\n.nps-range,\r\n.nps-text {\r\n  width: 49%;\r\n}\r\n\r\n.nps-range label:nth-child(5) > input:not(:checked) ~ span::before {\r\n  background: var(--background-light-color);\r\n}\r\n\r\n.nps-range label > input[type='checkbox']:checked ~ span::before {\r\n  background: var(--primary-color);\r\n  -moz-box-shadow: 0px 2px 8px rgba(0, 25, 114, 0.3);\r\n  -webkit-box-shadow: 0px 2px 8px rgba(0, 25, 114, 0.3);\r\n  box-shadow: 0px 2px 8px rgba(0, 25, 114, 0.3);\r\n}\r\n\r\n.nps-range label:nth-child(2) > input + span + span::before {\r\n  left: 53.245%;\r\n}\r\n\r\n.nps-range label:nth-child(2) > span::before {\r\n  width: 46.755%;\r\n}\r\n\r\n.nps-range label:nth-child(3) > input + span + span::before {\r\n  left: 34.68%;\r\n}\r\n\r\n.nps-range label:nth-child(3) > input + span + span + span::before {\r\n  left: 69.36%;\r\n}\r\n\r\n.nps-range label:nth-child(3) > span::before {\r\n  width: 30.62%;\r\n}\r\n\r\n.nps-range label:nth-child(4) > input + span + span::before {\r\n  left: 25.625%;\r\n}\r\n\r\n.nps-range label:nth-child(4) > input + span + span + span::before {\r\n  left: 51.25%;\r\n}\r\n\r\n.nps-range label:nth-child(4) > input + span + span + span + span::before {\r\n  left: 76.875%;\r\n}\r\n\r\n.nps-range label:nth-child(4) > span::before {\r\n  width: 23.125%;\r\n}\r\n\r\n.nps-range label:nth-child(5) > input + span + span::before {\r\n  left: 20.5%;\r\n}\r\n\r\n.nps-range label:nth-child(5) > input + span + span + span::before {\r\n  left: 41%;\r\n}\r\n\r\n.nps-range label:nth-child(5) > input + span + span + span + span::before {\r\n  left: 61.5%;\r\n}\r\n\r\n.nps-range label:nth-child(5) > input + span + span + span + span + span::before {\r\n  left: auto;\r\n  right: 0;\r\n  border-bottom-right-radius: 7.5px;\r\n  border-top-right-radius: 7.5px;\r\n}\r\n\r\n.nps-range label:nth-child(5) > span::before {\r\n  width: 18%;\r\n}\r\n\r\n.nps-range > label > span::before {\r\n  content: '';\r\n  display: block;\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 0;\r\n  height: 15px;\r\n  border-radius: 2px;\r\n  z-index: 0;\r\n}\r\n\r\n.nps-range label > input + span::before {\r\n  left: 0;\r\n  border-bottom-left-radius: 7.5px;\r\n  border-top-left-radius: 7.5px;\r\n}\r\n\r\n.time_frame_block:not([id='tfb_0']) .tfb_close {\r\n  display: flex;\r\n}\r\n\r\n.time_frame_block .tfb_close {\r\n  display: none;\r\n}\r\n\r\n.tfb_close::before {\r\n  content: '';\r\n  background: #fff url(/assets/images/icons/circle/close.svg) center center no-repeat;\r\n  width: 24px;\r\n  height: 24px;\r\n}\r\n\r\np img.image_resized {\r\n  @apply inline-block align-bottom;\r\n}\r\n","root {\r\n  --ck-color-image-caption-background: hsl(0, 0%, 97%);\r\n  --ck-color-image-caption-text: hsl(0, 0%, 20%);\r\n  --ck-color-mention-background: hsla(341, 100%, 30%, 0.1);\r\n  --ck-color-mention-text: hsl(341, 100%, 30%);\r\n  --ck-color-table-caption-background: hsl(0, 0%, 97%);\r\n  --ck-color-table-caption-text: hsl(0, 0%, 20%);\r\n  --ck-highlight-marker-blue: hsl(201, 97%, 72%);\r\n  --ck-highlight-marker-green: hsl(120, 93%, 68%);\r\n  --ck-highlight-marker-pink: hsl(345, 96%, 73%);\r\n  --ck-highlight-marker-yellow: hsl(60, 97%, 73%);\r\n  --ck-highlight-pen-green: hsl(112, 100%, 27%);\r\n  --ck-highlight-pen-red: hsl(0, 85%, 49%);\r\n  --ck-image-style-spacing: 1.5em;\r\n  --ck-inline-image-style-spacing: calc(var(--ck-image-style-spacing) / 2);\r\n  --ck-todo-list-checkmark-size: 16px;\r\n}\r\n.ck-content {\r\n  blockquote {\r\n    overflow: hidden;\r\n    padding-right: 1.5em;\r\n    padding-left: 1.5em;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    font-style: italic;\r\n    border-left: solid 5px hsl(0, 0%, 80%);\r\n  }\r\n  code {\r\n    background-color: hsla(0, 0%, 78%, 0.3);\r\n    padding: 0.15em;\r\n    border-radius: 2px;\r\n  }\r\n  .text-tiny {\r\n    font-size: 0.7em;\r\n  }\r\n  .text-small {\r\n    font-size: 0.85em;\r\n  }\r\n  .text-big {\r\n    font-size: 1.4em;\r\n  }\r\n  .text-huge {\r\n    font-size: 1.8em;\r\n  }\r\n  .marker-yellow {\r\n    background-color: var(--ck-highlight-marker-yellow);\r\n  }\r\n  .marker-green {\r\n    background-color: var(--ck-highlight-marker-green);\r\n  }\r\n  .marker-pink {\r\n    background-color: var(--ck-highlight-marker-pink);\r\n  }\r\n  .marker-blue {\r\n    background-color: var(--ck-highlight-marker-blue);\r\n  }\r\n  .pen-red {\r\n    color: var(--ck-highlight-pen-red);\r\n    background-color: transparent;\r\n  }\r\n  .pen-green {\r\n    color: var(--ck-highlight-pen-green);\r\n    background-color: transparent;\r\n  }\r\n  .image.image_resized {\r\n    max-width: 100%;\r\n    display: block;\r\n    box-sizing: border-box;\r\n    img {\r\n      width: 100%;\r\n    }\r\n    > figcaption {\r\n      display: block;\r\n    }\r\n  }\r\n  .image {\r\n    display: table;\r\n    clear: both;\r\n    text-align: center;\r\n    margin: 0.9em auto;\r\n    min-width: 50px;\r\n    img {\r\n      display: block;\r\n      margin: 0 auto;\r\n      max-width: 100%;\r\n      min-width: 100%;\r\n    }\r\n    > figcaption {\r\n      display: table-caption;\r\n      caption-side: bottom;\r\n      word-break: break-word;\r\n      color: var(--ck-color-image-caption-text);\r\n      background-color: var(--ck-color-image-caption-background);\r\n      padding: 0.6em;\r\n      font-size: 0.75em;\r\n      outline-offset: -1px;\r\n    }\r\n  }\r\n  .image-inline {\r\n    display: inline-flex;\r\n    max-width: 100%;\r\n    align-items: flex-start;\r\n    picture {\r\n      display: flex;\r\n      flex-grow: 1;\r\n      flex-shrink: 1;\r\n      max-width: 100%;\r\n    }\r\n    img {\r\n      flex-grow: 1;\r\n      flex-shrink: 1;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n  .image-style-block-align-left {\r\n    max-width: calc(100% - var(--ck-image-style-spacing));\r\n    margin-left: 0;\r\n    margin-right: auto;\r\n  }\r\n  .image-style-block-align-right {\r\n    max-width: calc(100% - var(--ck-image-style-spacing));\r\n    margin-right: 0;\r\n    margin-left: auto;\r\n  }\r\n  .image-style-align-left {\r\n    clear: none;\r\n    float: left;\r\n    margin-right: var(--ck-image-style-spacing);\r\n  }\r\n  .image-style-align-right {\r\n    clear: none;\r\n    float: right;\r\n    margin-left: var(--ck-image-style-spacing);\r\n  }\r\n  .image-style-side {\r\n    float: right;\r\n    margin-left: var(--ck-image-style-spacing);\r\n    max-width: 50%;\r\n  }\r\n  .image-style-align-center {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  p {\r\n    + {\r\n      .image-style-align-left {\r\n        margin-top: 0;\r\n      }\r\n      .image-style-align-right {\r\n        margin-top: 0;\r\n      }\r\n      .image-style-side {\r\n        margin-top: 0;\r\n      }\r\n    }\r\n  }\r\n  .image-inline.image-style-align-left {\r\n    margin-top: var(--ck-inline-image-style-spacing);\r\n    margin-bottom: var(--ck-inline-image-style-spacing);\r\n    margin-right: var(--ck-inline-image-style-spacing);\r\n  }\r\n  .image-inline.image-style-align-right {\r\n    margin-top: var(--ck-inline-image-style-spacing);\r\n    margin-bottom: var(--ck-inline-image-style-spacing);\r\n    margin-left: var(--ck-inline-image-style-spacing);\r\n  }\r\n  span[lang] {\r\n    font-style: italic;\r\n  }\r\n  .todo-list {\r\n    list-style: none;\r\n    li {\r\n      margin-bottom: 5px;\r\n      .todo-list {\r\n        margin-top: 5px;\r\n      }\r\n    }\r\n    .todo-list__label {\r\n      > input {\r\n        -webkit-appearance: none;\r\n        display: inline-block;\r\n        position: relative;\r\n        width: var(--ck-todo-list-checkmark-size);\r\n        height: var(--ck-todo-list-checkmark-size);\r\n        vertical-align: middle;\r\n        border: 0;\r\n        left: -25px;\r\n        margin-right: -15px;\r\n        right: 0;\r\n        margin-left: 0;\r\n        &::before {\r\n          display: block;\r\n          position: absolute;\r\n          box-sizing: border-box;\r\n          content: '';\r\n          width: 100%;\r\n          height: 100%;\r\n          border: 1px solid hsl(0, 0%, 20%);\r\n          border-radius: 2px;\r\n          transition: 250ms ease-in-out box-shadow, 250ms ease-in-out background, 250ms ease-in-out border;\r\n        }\r\n        &::after {\r\n          display: block;\r\n          position: absolute;\r\n          box-sizing: content-box;\r\n          pointer-events: none;\r\n          content: '';\r\n          left: calc(var(--ck-todo-list-checkmark-size) / 3);\r\n          top: calc(var(--ck-todo-list-checkmark-size) / 5.3);\r\n          width: calc(var(--ck-todo-list-checkmark-size) / 5.3);\r\n          height: calc(var(--ck-todo-list-checkmark-size) / 2.6);\r\n          border-style: solid;\r\n          border-color: transparent;\r\n          border-width: 0 calc(var(--ck-todo-list-checkmark-size) / 8) calc(var(--ck-todo-list-checkmark-size) / 8) 0;\r\n          transform: rotate(45deg);\r\n        }\r\n      }\r\n      > input[checked] {\r\n        &::before {\r\n          background: hsl(126, 64%, 41%);\r\n          border-color: hsl(126, 64%, 41%);\r\n        }\r\n        &::after {\r\n          border-color: hsl(0, 0%, 100%);\r\n        }\r\n      }\r\n      .todo-list__label__description {\r\n        vertical-align: middle;\r\n      }\r\n    }\r\n  }\r\n  .media {\r\n    clear: both;\r\n    margin: 0.9em 0;\r\n    display: block;\r\n    min-width: 15em;\r\n  }\r\n  .page-break {\r\n    position: relative;\r\n    clear: both;\r\n    padding: 5px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      border-bottom: 2px dashed hsl(0, 0%, 77%);\r\n      width: 100%;\r\n    }\r\n  }\r\n  .page-break__label {\r\n    position: relative;\r\n    z-index: 1;\r\n    padding: 0.3em 0.6em;\r\n    display: block;\r\n    text-transform: uppercase;\r\n    border: 1px solid hsl(0, 0%, 77%);\r\n    border-radius: 2px;\r\n    font-family: Helvetica, Arial, Tahoma, Verdana, Sans-Serif;\r\n    font-size: 0.75em;\r\n    font-weight: bold;\r\n    color: hsl(0, 0%, 20%);\r\n    background: hsl(0, 0%, 100%);\r\n    box-shadow: 2px 2px 1px hsla(0, 0%, 0%, 0.15);\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n  .table {\r\n    .ck-table-resized {\r\n      table-layout: fixed;\r\n    }\r\n    table {\r\n      overflow: hidden;\r\n      border-collapse: collapse;\r\n      border-spacing: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px double hsl(0, 0%, 70%);\r\n      td {\r\n        min-width: 2em;\r\n        padding: 0.4em;\r\n        border: 1px solid hsl(0, 0%, 75%);\r\n      }\r\n      th {\r\n        min-width: 2em;\r\n        padding: 0.4em;\r\n        border: 1px solid hsl(0, 0%, 75%);\r\n        font-weight: bold;\r\n        background: hsla(0, 0%, 0%, 5%);\r\n      }\r\n    }\r\n    td {\r\n      position: relative;\r\n    }\r\n    th {\r\n      position: relative;\r\n    }\r\n    margin: 0.9em auto;\r\n    display: table;\r\n    > figcaption {\r\n      display: table-caption;\r\n      caption-side: top;\r\n      word-break: break-word;\r\n      text-align: center;\r\n      color: var(--ck-color-table-caption-text);\r\n      background-color: var(--ck-color-table-caption-background);\r\n      padding: 0.6em;\r\n      font-size: 0.75em;\r\n      outline-offset: -1px;\r\n    }\r\n  }\r\n  pre {\r\n    padding: 1em;\r\n    color: hsl(0, 0%, 20.8%);\r\n    background: hsla(0, 0%, 78%, 0.3);\r\n    border: 1px solid hsl(0, 0%, 77%);\r\n    border-radius: 2px;\r\n    text-align: left;\r\n    direction: ltr;\r\n    tab-size: 4;\r\n    white-space: pre-wrap;\r\n    font-style: normal;\r\n    min-width: 200px;\r\n    code {\r\n      background: unset;\r\n      padding: 0;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n  hr {\r\n    margin: 15px 0;\r\n    height: 4px;\r\n    background: hsl(0, 0%, 87%);\r\n    border: 0;\r\n  }\r\n  ol {\r\n    list-style-type: decimal;\r\n    ol {\r\n      list-style-type: lower-latin;\r\n      ol {\r\n        list-style-type: lower-roman;\r\n        ol {\r\n          list-style-type: upper-latin;\r\n          ol {\r\n            list-style-type: upper-roman;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ul {\r\n    list-style-type: circle;\r\n    ul {\r\n      list-style-type: disc;\r\n      ul {\r\n        list-style-type: square;\r\n        ul {\r\n          list-style-type: square;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .mention {\r\n    background: var(--ck-color-mention-background);\r\n    color: var(--ck-color-mention-text);\r\n  }\r\n}\r\n.ck-content[dir='rtl'] {\r\n  blockquote {\r\n    border-left: 0;\r\n    border-right: solid 5px hsl(0, 0%, 80%);\r\n  }\r\n  .table {\r\n    th {\r\n      text-align: right;\r\n    }\r\n  }\r\n}\r\n.ck-content[dir='ltr'] {\r\n  .table {\r\n    th {\r\n      text-align: left;\r\n    }\r\n  }\r\n}\r\n@media print {\r\n  .ck-content {\r\n    .page-break {\r\n      padding: 0;\r\n      &::after {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n.ck-content {\r\n  // Start copy from https://github.com/Kyons-VN/custom-ckeditor/blob/main/sample/kyons_content_style.css\r\n  h6,\r\n  h7,\r\n  h8 {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    overflow-wrap: break-word;\r\n    display: block;\r\n  }\r\n  h6,\r\n  .ck.ck-button.ck-heading_heading6 {\r\n    font-size: 18px;\r\n  }\r\n  h7,\r\n  .ck.ck-button.ck-heading_heading7 {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n  h8,\r\n  .ck.ck-button.ck-heading_heading8 {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n  }\r\n  a {\r\n    color: #fb7200;\r\n  }\r\n  a:hover,\r\n  a:visited:hover {\r\n    color: #315d93;\r\n  }\r\n  a:visited {\r\n    color: #de6501;\r\n  }\r\n  note,\r\n  .ck.ck-button.ck-heading_note,\r\n  customcaption,\r\n  .ck.ck-button.ck-heading_caption {\r\n    font-size: 12px;\r\n  }\r\n  customcaption,\r\n  .ck.ck-button.ck-heading_customcaption {\r\n    text-transform: uppercase;\r\n  }\r\n  .text-primaryBlue {\r\n    color: #2c3d5b;\r\n  }\r\n  .text-secondaryBlue {\r\n    color: #2c3d5b;\r\n  }\r\n  .text-lightBlue1 {\r\n    color: #06a5ff;\r\n  }\r\n  .text-lightBlue2 {\r\n    color: #27b1ff;\r\n  }\r\n  .text-lightBlue4 {\r\n    color: #5bc3fe;\r\n  }\r\n  .text-lightBlue5 {\r\n    color: #98d6fa;\r\n  }\r\n  .text-lightBlue6 {\r\n    color: #b6e5ff;\r\n  }\r\n  .text-lightBlue7 {\r\n    color: #d0eeff;\r\n  }\r\n  .text-white {\r\n    color: #ffffff;\r\n  }\r\n  .text-black {\r\n    color: #000000;\r\n  }\r\n  .ck-content .table table {\r\n    border: 1px solid transparent;\r\n    border-collapse: separate;\r\n  }\r\n  .ck-content .table table th {\r\n    background: #b6e5ff;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: #2c3d5b;\r\n    border: 1px solid #b6e5ff;\r\n  }\r\n  .ck-content .table table tr td {\r\n    border-color: #cbd5e1;\r\n    border-left: none;\r\n    border-right: none;\r\n    border-top: none;\r\n  }\r\n  .ck-content .table table thead tr:first-child th:first-child {\r\n    border-top-left-radius: 0.5rem;\r\n  }\r\n  .ck-content .table table thead tr:first-child th:last-child {\r\n    border-top-right-radius: 0.5rem;\r\n  }\r\n  .ck-content .table table td,\r\n  .ck-content .table table th {\r\n    padding: 0.5rem;\r\n  }\r\n  .ck-content .table table tbody tr {\r\n    border: 1px solid #cbd5e1;\r\n    border-top: none;\r\n    border-left-color: #b6e5ff;\r\n    border-right-color: #b6e5ff;\r\n  }\r\n  .table table tbody tr td:first-child {\r\n    border-left: 1px solid #b6e5ff;\r\n  }\r\n  .table table tbody tr td:last-child {\r\n    border-right: 1px solid #b6e5ff;\r\n  }\r\n  // End copy\r\n\r\n  // Custom for Student App\r\n  ul {\r\n    margin: inherit;\r\n    padding: inherit;\r\n    list-style-type: disc;\r\n\r\n    ul {\r\n      list-style-type: circle;\r\n    }\r\n  }\r\n  @media (max-width: 767px) {\r\n    .image.image-style-side,\r\n    .image.image-style-align-right,\r\n    .image.image-style-align-left,\r\n    .image-inline.image-style-align-left,\r\n    .image-inline.image-style-align-right,\r\n    .image.image-style-block-align-left,\r\n    .image.image-style-block-align-right,\r\n    .image_resized {\r\n      float: none;\r\n      width: 100% !important;\r\n      max-width: 100%;\r\n      margin-left: 0;\r\n      margin-right: 0;\r\n      clear: both;\r\n    }\r\n  }\r\n}\r\n",".bg-orange-gradient {\r\n  background: url('/assets/images/SHORTCUT_2.svg') no-repeat right bottom,\r\n    linear-gradient(90deg, #fb7200 48.96%, #de6501 89.95%);\r\n  background: url('/assets/images/SHORTCUT_2.svg') no-repeat right bottom,\r\n    -moz-linear-gradient(90deg, #fb7200 48.96%, #de6501 89.95%);\r\n  background: url('/assets/images/SHORTCUT_2.svg') no-repeat right bottom,\r\n    -webkit-linear-gradient(0deg, #fb7200 48.96%, #de6501 89.95%);\r\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#FB7200\",endColorstr=\"#DE6501\",GradientType=1);\r\n}\r\n\r\n.btn-extra-large {\r\n  @apply p-6 h-20 rounded-2xl;\r\n  span {\r\n    @apply text-base font-bold;\r\n  }\r\n  i::before {\r\n    @apply text-2xl;\r\n  }\r\n  &:disabled {\r\n    @apply text-blueGrey-400;\r\n    background: url('/assets/images/SHORTCUT_2.svg') no-repeat right bottom, var(--color-blueGrey-500);\r\n  }\r\n}\r\n\r\n.bg-blue-gradient {\r\n  background: url('/assets/images/SHORTCUT.svg') no-repeat right bottom,\r\n    linear-gradient(90deg, #27b1ff 48.96%, #315d93 89.95%);\r\n  background: url('/assets/images/SHORTCUT.svg') no-repeat right bottom,\r\n    -moz-linear-gradient(90deg, #27b1ff 48.96%, #315d93 89.95%);\r\n  background: url('/assets/images/SHORTCUT.svg') no-repeat right bottom,\r\n    -webkit-linear-gradient(0deg, #27b1ff 48.96%, #315d93 89.95%);\r\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#27B1FF\",endColorstr=\"#315D93\",GradientType=1);\r\n  &:disabled {\r\n    background-color: #64748b;\r\n    border-color: #64748b;\r\n  }\r\n}\r\n\r\n.bg-shortcut {\r\n  @apply bg-[url('/assets/images/SHORTCUT.svg')] bg-right-bottom bg-no-repeat;\r\n  &.shortcut2 {\r\n    @apply bg-[url('/assets/images/SHORTCUT_2.svg')];\r\n  }\r\n}\r\n\r\n.learning-goal-item {\r\n  @apply flex h-[100px] items-center rounded-2xl bg-white shadow-1 md:shadow-3 px-4 py-2 gap-4 cursor-pointer;\r\n  img {\r\n    @apply h-20 w-20 rounded-2xl;\r\n  }\r\n}\r\n\r\n.katex .katex-mathml msub > mo {\r\n  line-height: 0;\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}