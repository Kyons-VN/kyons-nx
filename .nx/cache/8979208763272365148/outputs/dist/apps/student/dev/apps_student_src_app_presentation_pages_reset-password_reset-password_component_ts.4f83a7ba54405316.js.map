{"version":3,"file":"apps_student_src_app_presentation_pages_reset-password_reset-password_component_ts.4f83a7ba54405316.js","mappings":"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","sources":["./apps/student/src/app/presentation/pages/reset-password/reset-password.component.ts","./apps/student/src/app/presentation/pages/reset-password/reset-password.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, ElementRef, HostBinding, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule, Validators\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, RouterModule } from '@angular/router';\r\nimport { AccountStandaloneService } from '@infrastructure/auth/account.service';\r\nimport { LoadingOverlayService } from '@infrastructure/loading-overlay.service';\r\nimport { NavigationService } from '@infrastructure/navigation/navigation.service';\r\nimport { AppPaths } from '@presentation/routes';\r\nimport { notHaveDigit, notHaveSpecial, notHaveUppercase, search } from '@utils/validators';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule],\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss'],\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  paths: AppPaths;\r\n  notHaveUppercase: (str: string) => void;\r\n  notHaveDigit: (str: string) => void;\r\n  notHaveSpecial: (str: string) => void;\r\n  search: (str: string, regexStr: string) => void;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private accountService: AccountStandaloneService,\r\n    navService: NavigationService,\r\n    private loading: LoadingOverlayService\r\n  ) {\r\n    this.paths = navService.paths;\r\n    this.notHaveUppercase = notHaveUppercase;\r\n    this.notHaveDigit = notHaveDigit;\r\n    this.notHaveSpecial = notHaveSpecial;\r\n    this.search = search;\r\n  }\r\n\r\n  @HostBinding('class') class = 'h-full';\r\n\r\n  emailForm: FormGroup = this.fb.group({});\r\n  resetForm: FormGroup = this.fb.group({});\r\n  email: FormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n  code: FormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.pattern(/^[0-9]{6,6}$/g),\r\n\r\n  ]);\r\n  step = 0;\r\n  emailNotFound = false;\r\n  // [!@#\\$%\\^&\\*\\(\\)\\~\\=_\\+\\}\\{\\\"\\:;\\'\\?\\{\\}\\/>\\.\\<,\\`\\-\\|\\[\\]]\r\n  password: FormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.pattern(/^((?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()~=_+}{\":;'?{}/>.<,`\\-|[\\]]).{8,99})/)\r\n  ]);\r\n  errorMessage = '';\r\n  processing = false;\r\n  isDebug = false;\r\n  wrongCode = false;\r\n  showPassword = false;\r\n  @ViewChild(\"emailElm\") emailElm!: ElementRef;\r\n  @ViewChild(\"codeElm\") codeElm!: ElementRef;\r\n  @ViewChild(\"passwordElm\") passwordElm!: ElementRef;\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        if (params['email']) {\r\n          this.email.setValue(params['email']);\r\n          this.step = 1;\r\n          if (params['reset_token']) {\r\n            this.code.setValue(params['reset_token']);\r\n          }\r\n        }\r\n      }\r\n      );\r\n    this.emailForm.addControl('email', this.email);\r\n    this.emailForm.get('email')?.valueChanges.subscribe(() => {\r\n      this.errorMessage = '';\r\n      this.emailNotFound = false;\r\n    })\r\n    this.emailForm.get('code')?.valueChanges.subscribe(() => {\r\n      this.errorMessage = '';\r\n      this.wrongCode = false;\r\n    })\r\n    this.resetForm.addControl('code', this.code);\r\n    this.resetForm.addControl('password', this.password);\r\n  }\r\n\r\n  // ngAfterViewInit(): void {\r\n  //   if (this.step == 0) this.emailElm.nativeElement.focus();\r\n  //   else if (this.step == 1) {\r\n  //     if (this.email.value == '') {\r\n  //       setTimeout(() => {\r\n  //         this.codeElm.nativeElement.focus();\r\n  //       }, 1000);\r\n  //     }\r\n  //     else {\r\n  //       setTimeout(() => {\r\n  //         this.passwordElm.nativeElement.focus();\r\n  //       }, 1000);\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  sendEmail() {\r\n    if (this.emailForm.untouched) {\r\n      this.emailForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    if (this.emailForm.invalid) return;\r\n    this.loading.show();\r\n    this.processing = true;\r\n    this.emailNotFound = false;\r\n    this.accountService.requestResetPassword(this.email.value).subscribe({\r\n      next: () => {\r\n        this.step = 1;\r\n        this.processing = false;\r\n        this.loading.hide();\r\n        setTimeout(() => {\r\n          this.codeElm.nativeElement.focus();\r\n        }, 1000);\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n        this.emailNotFound = true;\r\n\r\n        this.processing = false;\r\n        this.loading.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  sendCode() {\r\n    this.resetForm.markAsTouched();\r\n    if (this.resetForm.invalid) return;\r\n    this.loading.show();\r\n    this.processing = true;\r\n    this.emailNotFound = false;\r\n    this.accountService.newPassword(this.email.value, this.password.value, this.code.value).subscribe({\r\n      next: () => {\r\n        this.step = 2;\r\n        this.processing = false;\r\n        this.loading.hide();\r\n      },\r\n      error: (err) => {\r\n        // {\r\n        //   message: \"Invalid verification code provided, please try again.\",\r\n        //   error_code: \"CodeMismatchException\",\r\n        //   errors: [\r\n        //   ],\r\n        // }\r\n        console.log(err);\r\n        if (err.error.error_code == \"CodeMismatchException\") {\r\n          this.wrongCode = true;\r\n        }\r\n        else if (err.error.error_code == \"ExpiredCodeException\") {\r\n          this.errorMessage = 'Mã code đã hết hiệu lực, xin thử lại';\r\n        }\r\n        else {\r\n          this.errorMessage = err.error.message;\r\n        }\r\n\r\n\r\n        this.processing = false;\r\n        this.loading.hide();\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"flex flex-col md:flex-row h-full\">\r\n  <div class=\"flex flex-col w-full h-full items-center justify-center bg-primaryBlue\">\r\n    <div class=\"flex flex-col w-full md:w-[434px] p-4\">\r\n      <img src=\"./assets/images/logo-v.svg\" alt=\"Logo\" class=\"h-24\" />\r\n      <div class=\"h-12\"></div>\r\n      <form *ngIf=\"step === 0\" class=\"flex flex-col\" [formGroup]=\"emailForm\" autocomplete=\"off\">\r\n        <p class=\"text-white\">Nhập email của bạn để nhận mã thay đổi mật khẩu.</p>\r\n        <div class=\"h-6\"></div>\r\n        <input\r\n          [ngClass]=\"{ '!text-orange border-orange': email.invalid || emailNotFound }\"\r\n          type=\"text\"\r\n          #emailElm\r\n          placeholder=\"Nhập email\"\r\n          formControlName=\"email\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <div class=\"h-1\"></div>\r\n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"error\">\r\n          <div *ngIf=\"email.errors?.['required']\">Chưa nhập Email.</div>\r\n          <div *ngIf=\"email.errors?.['email']\">Email chưa đúng.</div>\r\n        </div>\r\n        <div *ngIf=\"emailNotFound && (email.dirty || email.touched)\" class=\"error\">\r\n          <div>Không tìm thấy tài khoản trùng khớp email.</div>\r\n        </div>\r\n        <div class=\"error mt-1\" *ngIf=\"errorMessage\">Thông tin chưa chính xác</div>\r\n        <div class=\"h-4\"></div>\r\n        <button (click)=\"sendEmail()\" class=\"btn\" [disabled]=\"(emailForm.touched && emailForm.invalid) || processing\">\r\n          {{ processing ? 'Đang xử lý' : 'Gửi tôi mã code' }}\r\n        </button>\r\n      </form>\r\n      <form *ngIf=\"step === 1\" class=\"flex flex-col\" [formGroup]=\"resetForm\" autocomplete=\"off\">\r\n        <div class=\"h-12\"></div>\r\n        <p class=\"text-white\">\r\n          Mã code đã được gửi đến email của bạn. Vui lòng kiểm tra email và nhập mã vào ô bên dưới.\r\n        </p>\r\n        <div class=\"h-6\"></div>\r\n        <input\r\n          [ngClass]=\"{ '!text-orange': wrongCode || (code.invalid && (code.dirty || code.touched)) }\"\r\n          type=\"text\"\r\n          #codeElm\r\n          placeholder=\"Nhập mã code\"\r\n          formControlName=\"code\"\r\n          autocomplete=\"new-code\"\r\n        />\r\n        <div class=\"h-1\"></div>\r\n        <div *ngIf=\"code.invalid && (code.dirty || code.touched)\" class=\"error\">\r\n          <div *ngIf=\"code.errors?.['required']\">Chưa nhập mã.</div>\r\n          <div *ngIf=\"code.errors?.['pattern']\">Cú pháp chưa đúng.</div>\r\n        </div>\r\n        <div *ngIf=\"wrongCode\" class=\"error\">\r\n          <div>Mã xác thực không đúng.</div>\r\n        </div>\r\n        <div class=\"h-4\"></div>\r\n        <div class=\"relative w-full\">\r\n          <input\r\n            #passwordElm\r\n            [type]=\"showPassword ? 'text' : 'password'\"\r\n            class=\"w-full\"\r\n            placeholder=\"Nhập mật khẩu\"\r\n            formControlName=\"password\"\r\n          />\r\n          <div\r\n            (click)=\"showPassword = !showPassword\"\r\n            class=\"absolute right-0 top-0 w-11 h-full flex items-center justify-center cursor-pointer\"\r\n          >\r\n            <i *ngIf=\"showPassword\" class=\"icon-VisibilityOff\"></i>\r\n            <i *ngIf=\"!showPassword\" class=\"icon-Visibility\"></i>\r\n          </div>\r\n        </div>\r\n        <div class=\"h-1\"></div>\r\n        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\r\n          <div *ngIf=\"password.errors?.['required']\">Chưa nhập mật khẩu.</div>\r\n          <div *ngIf=\"password.errors?.['pattern']\">Mật khẩu không hợp lệ.</div>\r\n        </div>\r\n        <div class=\"h-4\"></div>\r\n        <!-- ^((?=.*[A-Z])(?=.*d).{8,99}) -->\r\n        <div *ngIf=\"password.touched\" class=\"text-white text-sm\">\r\n          Mật khẩu phải có:<br />\r\n          <ul class=\"list-disc\">\r\n            <li\r\n              class=\"ml-5\"\r\n              [ngClass]=\"{\r\n                'text-red-0': (password.dirty || password.touched) && password.value.length < 8\r\n              }\"\r\n            >\r\n              Từ 8 ký tự trở lên\r\n            </li>\r\n            <li\r\n              class=\"ml-5\"\r\n              [ngClass]=\"{\r\n                'text-red-0': (password.dirty || password.touched) && notHaveUppercase(password.value)\r\n              }\"\r\n            >\r\n              Ký tự viết hoa (A-Z)\r\n            </li>\r\n            <li\r\n              class=\"ml-5\"\r\n              [ngClass]=\"{\r\n                'text-red-0': (password.dirty || password.touched) && notHaveDigit(password.value)\r\n              }\"\r\n            >\r\n              Ký tự số (0-9)\r\n            </li>\r\n            <li\r\n              class=\"ml-5\"\r\n              [ngClass]=\"{\r\n                'text-red-0': (password.dirty || password.touched) && notHaveSpecial(password.value)\r\n              }\"\r\n            >\r\n              Ký tự đặc biệt (~! &#64;#$%^&*_-+=`|\\()&#123;&#125;[]:;\"'&#60;>,.?/)\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\r\n        <div class=\"h-6\"></div>\r\n        <button (click)=\"sendCode()\" class=\"btn\" [disabled]=\"(resetForm.touched && resetForm.invalid) || processing\">\r\n          {{ processing ? 'Đang xử lý' : 'Tiếp tục' }}\r\n        </button>\r\n      </form>\r\n      <div *ngIf=\"step === 2\" class=\"text-white\">\r\n        Đổi mật khẩu thành công! Hãy đăng nhập và trải nghiệm Kyons thôi nào!\r\n      </div>\r\n      <div class=\"h-6\"></div>\r\n      <a [routerLink]=\"paths.home.path\" [ngClass]=\"{ 'text-orange': step !== 2, btn: step === 2 }\"\r\n        >Quay lại đăng nhập</a\r\n      >\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"names":["CommonModule","ElementRef","FormBuilder","FormControl","FormsModule","ReactiveFormsModule","Validators","ActivatedRoute","RouterModule","AccountStandaloneService","LoadingOverlayService","NavigationService","notHaveDigit","notHaveSpecial","notHaveUppercase","search","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ResetPasswordComponent_form_5_div_7_div_1_Template","ResetPasswordComponent_form_5_div_7_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r4","email","errors","ɵɵelement","ResetPasswordComponent_form_5_div_7_Template","ResetPasswordComponent_form_5_div_8_Template","ResetPasswordComponent_form_5_div_9_Template","ɵɵlistener","ResetPasswordComponent_form_5_Template_button_click_11_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","sendEmail","ctx_r0","emailForm","ɵɵpureFunction1","_c3","invalid","emailNotFound","dirty","touched","errorMessage","processing","ɵɵtextInterpolate1","ResetPasswordComponent_form_6_div_8_div_1_Template","ResetPasswordComponent_form_6_div_8_div_2_Template","ctx_r12","code","ResetPasswordComponent_form_6_div_18_div_1_Template","ResetPasswordComponent_form_6_div_18_div_2_Template","ctx_r17","password","_c4","ctx_r18","value","length","ɵɵtextInterpolate","ctx_r19","ResetPasswordComponent_form_6_div_8_Template","ResetPasswordComponent_form_6_div_9_Template","ResetPasswordComponent_form_6_Template_div_click_14_listener","_r25","ctx_r24","showPassword","ResetPasswordComponent_form_6_i_15_Template","ResetPasswordComponent_form_6_i_16_Template","ResetPasswordComponent_form_6_div_18_Template","ResetPasswordComponent_form_6_div_20_Template","ResetPasswordComponent_form_6_div_21_Template","ResetPasswordComponent_form_6_Template_button_click_23_listener","ctx_r26","sendCode","ctx_r1","resetForm","_c5","wrongCode","ResetPasswordComponent","constructor","route","fb","accountService","navService","loading","class","group","required","pattern","step","isDebug","paths","ngOnInit","queryParams","subscribe","params","setValue","addControl","get","valueChanges","untouched","markAllAsTouched","show","requestResetPassword","next","hide","setTimeout","codeElm","nativeElement","focus","error","err","console","log","markAsTouched","newPassword","error_code","message","_","ɵɵdirectiveInject","i1","i2","i3","i4","i5","_2","selectors","viewQuery","ResetPasswordComponent_Query","rf","ctx","ResetPasswordComponent_form_5_Template","ResetPasswordComponent_form_6_Template","ResetPasswordComponent_div_7_Template","home","path","ɵɵpureFunction2","_c6","i6","NgClass","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","RouterLink","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}