{"version":3,"file":"common.e55619145f604d66.js","mappings":";;;;;;;;;;;;;;;;AAA+D;AAErB;;;AAKpC,MAAOG,wBAAwB;EACnCC,YAAoBC,IAAgB,EAAEC,OAAoB;IAAtC,KAAAD,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACA,IAAI,GAAG,IAAIJ,4DAAU,CAACK,OAAO,CAAC;EACrC;EAEAC,MAAMA,CAAC;IACLC,KAAK;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,QAAQ;IACRC;EAAG,CAYJ;IACC,MAAMC,MAAM,GAA4B;MACtCH,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBG,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAEL,KAAK;MACjBM,YAAY,EAAE;KACf;IACD,IAAIJ,GAAG,EAAE;MACPC,MAAM,CAAC,UAAU,CAAC,GAAG;QACnBI,iBAAiB,EAAEL;OACpB;;IAGH,OAAO,IAAI,CAACL,IAAI,CAACW,IAAI,CAAC,GAAGd,uDAAS,EAAE,eAAe,EAAES,MAAM,CAAC;EAC9D;EAEAM,oBAAoBA,CAACT,KAAa;IAChC,OAAO,IAAI,CAACH,IAAI,CAACW,IAAI,CAAC,GAAGd,uDAAS,EAAE,kBAAkB,EAAE;MAAEM,KAAK,EAAEA;IAAK,CAAE,CAAC;EAC3E;EAEAU,WAAWA,CAACV,KAAa,EAAEU,WAAmB,EAAEC,IAAY;IAC1D,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAC,GAAGlB,uDAAS,EAAE,kBAAkB,EAAE;MAAEM,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAES,WAAW;MAAEC,IAAI,EAAEA;IAAI,CAAE,CAAC;EAC7G;EAAC,QAAAE,CAAA;qBAlDUlB,wBAAwB,EAAAmB,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAE,6DAAA;EAAA;EAAA,QAAAC,EAAA;WAAxBtB,wBAAwB;IAAAuB,OAAA,EAAxBvB,wBAAwB,CAAAwB,IAAA;IAAAC,UAAA,EAFvB;EAAM;;;;;;;;;;;;;;;;;;ACLpB,SAASC,YAAYA,CAACC,GAAW;EAC/B,OAAOA,GAAG,CAACC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACxC;AAEA,SAASC,gBAAgBA,CAACF,GAAW;EACnC,OAAOA,GAAG,CAACC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACxC;AAEA,SAASE,cAAcA,CAACH,GAAW;EACjC,OAAOA,GAAG,CAACC,MAAM,CAAC,6CAA6C,CAAC,IAAI,CAAC,CAAC;AACxE;AAEA,SAASA,MAAMA,CAACD,GAAW,EAAEI,QAAgB;EAC3CJ,GAAG,CAACC,MAAM,CAACG,QAAQ,CAAC;AACtB","sources":["./apps/student/src/app/infrastructure/auth/account.service.ts","./apps/student/src/app/utils/validators.ts"],"sourcesContent":["import { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { serverApi } from './interceptor';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountStandaloneService {\r\n  constructor(private http: HttpClient, backend: HttpBackend) {\r\n    this.http = new HttpClient(backend);\r\n  }\r\n\r\n  signUp({\r\n    email,\r\n    // firstName,\r\n    // lastName,\r\n    // phone,\r\n    // birthdate,\r\n    // className,\r\n    // school,\r\n    // city,\r\n    password,\r\n    ref,\r\n  }: {\r\n    email: string;\r\n    // firstName: string;\r\n    // lastName: string;\r\n    // phone: string;\r\n    // birthdate: Date;\r\n    // className: string;\r\n    // school: string;\r\n    // city: string;\r\n    password: string;\r\n    ref?: unknown;\r\n  }) {\r\n    const params: Record<string, unknown> = {\r\n      email: email,\r\n      password: password,\r\n      family_name: '_',\r\n      given_name: email,\r\n      phone_number: '000',\r\n    };\r\n    if (ref) {\r\n      params['referral'] = {\r\n        mocktest_referral: ref,\r\n      };\r\n    }\r\n\r\n    return this.http.post(`${serverApi()}/auth/sign_up`, params);\r\n  }\r\n\r\n  requestResetPassword(email: string) {\r\n    return this.http.post(`${serverApi()}/forgot_password`, { email: email });\r\n  }\r\n\r\n  newPassword(email: string, newPassword: string, code: string) {\r\n    return this.http.put(`${serverApi()}/forgot_password`, { email: email, password: newPassword, code: code });\r\n  }\r\n}\r\n","function notHaveDigit(str: string): boolean {\r\n  return str.search(/(?=.*[0-9])/) == -1;\r\n}\r\n\r\nfunction notHaveUppercase(str: string): boolean {\r\n  return str.search(/(?=.*[A-Z])/) == -1;\r\n}\r\n\r\nfunction notHaveSpecial(str: string): boolean {\r\n  return str.search(/(?=.*[!@#$%^&*()~=_+}{\":;'?{}/>.<,`\\-|[\\]])/) == -1;\r\n}\r\n\r\nfunction search(str: string, regexStr: string) {\r\n  str.search(regexStr);\r\n}\r\n\r\nexport { notHaveDigit, notHaveSpecial, notHaveUppercase, search };\r\n"],"names":["HttpBackend","HttpClient","serverApi","AccountStandaloneService","constructor","http","backend","signUp","email","password","ref","params","family_name","given_name","phone_number","mocktest_referral","post","requestResetPassword","newPassword","code","put","_","i0","ɵɵinject","i1","_2","factory","ɵfac","providedIn","notHaveDigit","str","search","notHaveUppercase","notHaveSpecial","regexStr"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}