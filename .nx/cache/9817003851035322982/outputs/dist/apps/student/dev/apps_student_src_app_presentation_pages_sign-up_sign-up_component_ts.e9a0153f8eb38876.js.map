{"version":3,"file":"apps_student_src_app_presentation_pages_sign-up_sign-up_component_ts.e9a0153f8eb38876.js","mappings":"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","sources":["./apps/student/src/app/domain/knowledge/i-test.ts","./apps/student/src/app/presentation/pages/sign-up/sign-up.component.ts","./apps/student/src/app/presentation/pages/sign-up/sign-up.component.html","./libs/share-directives/src/lib/before-unload/before-unload.directive.ts","./libs/share-directives/src/lib/before-unload/before-unload.service.ts","./libs/share-directives/src/lib/before-unload/before-unload.token.ts","./libs/share-directives/src/lib/before-unload/index.ts"],"sourcesContent":["import { Category } from '../../infrastructure/knowledge/category';\r\nimport { Topic } from '../../infrastructure/knowledge/topic';\r\n\r\ninterface ITestContent {\r\n  id: string;\r\n  questions: IQuestion[];\r\n  done: boolean;\r\n}\r\n\r\ninterface IQA {\r\n  question: IQuestion;\r\n}\r\n\r\ninterface IQuestion {\r\n  id: string;\r\n  content: string;\r\n  answers: IAnswer[];\r\n  category: Category;\r\n  topic: Topic;\r\n}\r\n\r\ninterface IAnswer {\r\n  id: string;\r\n  order: number;\r\n  value: string;\r\n  content: string;\r\n}\r\n\r\nenum TestType {\r\n  Mock, Lesson, Exercise\r\n}\r\n\r\ninterface ITestResult {\r\n  score: number;\r\n  result: IAnswerResult;\r\n  review: IAnswerReview;\r\n  ordinalNumber: number;\r\n  type: TestType;\r\n  shareReferral?: string;\r\n\r\n  isFirst: () => boolean;\r\n  canShare: () => boolean;\r\n  getShareableMockTestLink?: () => string;\r\n}\r\n\r\ninterface IAnswerResult {\r\n  categories: { [key: string]: number };\r\n  topics: { [key: string]: number };\r\n  score: number;\r\n  maxScore: { [key: string]: number };\r\n  topicWrongQuestions: { [key: string]: Array<string> };\r\n}\r\n\r\ninterface IAnswerReview {\r\n  selectedAnswers: Array<string>;\r\n  rightAnswers: Array<string>;\r\n}\r\n\r\nexport {\r\n  ITestContent,\r\n  IQA,\r\n  IQuestion,\r\n  IAnswer,\r\n  ITestResult,\r\n  TestType,\r\n  IAnswerResult,\r\n  IAnswerReview,\r\n};\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, RouterModule } from '@angular/router';\r\nimport { TestType } from '@domain/knowledge/i-test';\r\nimport { AccountStandaloneService } from '@infrastructure/auth/account.service';\r\nimport { LoadingOverlayService } from '@infrastructure/loading-overlay.service';\r\nimport { NavigationService } from '@infrastructure/navigation/navigation.service';\r\nimport { AppPaths } from '@presentation/routes';\r\nimport { BeforeunloadDirective } from '@share-directives/before-unload';\r\nimport { notHaveDigit, notHaveSpecial, notHaveUppercase, search } from '@utils/validators';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, BeforeunloadDirective],\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss'],\r\n})\r\nexport class SignUpComponent implements OnInit, AfterViewInit {\r\n  paths: AppPaths;\r\n  notHaveUppercase: (str: string) => boolean;\r\n  notHaveDigit: (str: string) => boolean;\r\n  notHaveSpecial: (str: string) => boolean;\r\n  search: (str: string, regexStr: string) => void;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private authService: AccountStandaloneService,\r\n    navService: NavigationService,\r\n    private loading: LoadingOverlayService\r\n  ) {\r\n    this.paths = navService.paths;\r\n    this.notHaveUppercase = notHaveUppercase;\r\n    this.notHaveDigit = notHaveDigit;\r\n    this.notHaveSpecial = notHaveSpecial;\r\n    this.search = search;\r\n  }\r\n\r\n  signUpForm1: FormGroup = this.fb.group({});\r\n  // firstName: FormControl = new FormControl('', [Validators.required]);\r\n  // lastName: FormControl = new FormControl('', [Validators.required]);\r\n  email: FormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.pattern(/^[a-z0-9+]+@[a-z0-9]+\\.[a-z]{2,4}$/),\r\n  ]);\r\n  phone: FormControl = new FormControl('', [Validators.required, Validators.pattern(/^[0-9]{10,11}$/)]);\r\n  birthdate: FormControl = new FormControl('');\r\n  class: FormControl = new FormControl('');\r\n  school: FormControl = new FormControl('');\r\n  city: FormControl = new FormControl('TP Hồ Chí Minh');\r\n  password: FormControl = new FormControl('', [\r\n    Validators.required,\r\n    // Validators.pattern(/^((?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()~=_+}{\":;'?{}/>.<,`\\-|[\\]]).{8,99})/),\r\n  ]);\r\n  step = 0;\r\n  showPassword = false;\r\n  processing = false;\r\n  errorMessage = '';\r\n  ref!: string;\r\n  refFrom!: TestType | null;\r\n  isShowTOS = false;\r\n  tosChecked = new FormControl<boolean>(false, [Validators.requiredTrue]);\r\n  @ViewChild('tosIframe') public tosIframe!: ElementRef<never>;\r\n  currentUrl = '';\r\n  shouldValidate = false;\r\n\r\n  @ViewChild('emailElm') emailElm!: ElementRef;\r\n\r\n  ngOnInit(): void {\r\n    this.ref = this.route.snapshot.queryParams['ref'] ?? '';\r\n    this.refFrom = this.route.snapshot.queryParams['mocktest'] ? TestType.Mock : null;\r\n    // this.signUpForm1.addControl('firstName', this.firstName);\r\n    // this.signUpForm1.addControl('lastName', this.lastName);\r\n    this.signUpForm1.addControl('email', this.email);\r\n    // this.signUpForm1.addControl('phone', this.phone);\r\n    // this.signUpForm1.addControl('birthdate', this.birthdate);\r\n    // this.signUpForm1.addControl('class', this.class);\r\n    // this.signUpForm1.addControl('school', this.school);\r\n    // this.signUpForm1.addControl('city', this.city);\r\n    this.signUpForm1.addControl('password', this.password);\r\n    this.signUpForm1.addControl('tosChecked', this.tosChecked);\r\n    this.signUpForm1.markAsPristine();\r\n    this.signUpForm1.valueChanges.subscribe(() => {\r\n      this.errorMessage = '';\r\n    });\r\n    this.signUpForm1.get('email')?.valueChanges.subscribe(email => {\r\n      this.signUpForm1.get('email')?.setValue(email.replace(/ /g, ''), { emitEvent: false });\r\n    });\r\n    this.currentUrl = window.location.href.replace(window.location.origin, '');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.emailElm.nativeElement.focus();\r\n  }\r\n\r\n  beforeunload = () => {\r\n    if (this.refFrom == TestType.Mock && this.step != 1) {\r\n      return 'Thử thách chỉ dành cho các bạn chưa có tài khoản.\\nBạn sẽ không thể tiếp tục thử thách nếu chuyển trang khác. Nhấn ok để đi đến trang khác. Nhấn Cancel để ở lại trang';\r\n    } else return undefined;\r\n  };\r\n\r\n  showTOS() {\r\n    this.isShowTOS = true;\r\n    // setTimeout(() => {\r\n\r\n    //   const iframDoc = this.tosIframe.nativeElement.ownerDocument;\r\n    //   // iframDoc.head.appendChild('style.css');\r\n    //   const style = iframDoc.createElement(\"style\");\r\n    //   const rule = 'body{backgound-color:white}';\r\n    //   style.innerHTML = rule;\r\n    //   iframDoc.head.appendChild(style);\r\n    //   // iframDoc.styleSheets[0].insertRule('strong { color: red; }');\r\n    // }, 1000);\r\n  }\r\n\r\n  validate() {\r\n    if (!this.shouldValidate) this.shouldValidate = true;\r\n    if (\r\n      !(\r\n        this.signUpForm1.get('email')?.dirty &&\r\n        this.signUpForm1.get('password')?.dirty &&\r\n        this.signUpForm1.get('firstName')?.dirty &&\r\n        this.signUpForm1.get('lastname')?.dirty &&\r\n        this.signUpForm1.get('phone')?.dirty &&\r\n        this.signUpForm1.get('tosChecked')?.dirty\r\n      )\r\n    ) {\r\n      this.signUpForm1.get('firstName')?.markAsDirty();\r\n      this.signUpForm1.get('password')?.markAsDirty();\r\n      this.signUpForm1.get('lastName')?.markAsDirty();\r\n      this.signUpForm1.get('email')?.markAsDirty();\r\n      this.signUpForm1.get('phone')?.markAsDirty();\r\n      this.signUpForm1.get('tosChecked')?.markAsDirty();\r\n    }\r\n    if (this.signUpForm1.untouched) this.signUpForm1.markAllAsTouched();\r\n    if (this.signUpForm1.invalid) return;\r\n    this.step = 1;\r\n  }\r\n\r\n  submitForm2() {\r\n    this.validate();\r\n    if (this.step == 0) return;\r\n    this.loading.show();\r\n    this.processing = true;\r\n    this.authService\r\n      .signUp({\r\n        email: this.email.value,\r\n        // firstName: this.firstName.value,\r\n        // lastName: this.lastName.value,\r\n        // phone: this.phone.value,\r\n        // birthdate: this.birthdate.value,\r\n        // className: this.class.value,\r\n        // school: this.school.value,\r\n        // city: this.city.value,\r\n        password: this.signUpForm1.get('password')?.value,\r\n        ref: this.ref,\r\n      })\r\n      .subscribe({\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        next: (res: any) => {\r\n          if (res['success']) {\r\n            this.step = 2;\r\n          } else {\r\n            this.errorMessage = 'Email đã có trong hệ thống';\r\n          }\r\n          this.processing = false;\r\n          this.loading.hide();\r\n        },\r\n        error: err => {\r\n          console.log(err);\r\n          this.errorMessage = 'Có lỗi, xin thử lại';\r\n          if (err.error.error_code == 'InvalidParam') {\r\n            this.step = 0;\r\n            if (err.error.invalid_param == 'email') {\r\n              setTimeout(() => {\r\n                this.email.setErrors({\r\n                  serverReject: true,\r\n                });\r\n                this.email.markAsTouched({ onlySelf: true });\r\n              }, 100);\r\n              this.errorMessage = 'Email không thể có dấu + hoặc dấu .';\r\n            }\r\n          } else if (err.error.error_code == 'UsernameExistsException') {\r\n            this.step = 0;\r\n            this.errorMessage = 'Email này đã được dùng để tạo tài khoản.';\r\n          }\r\n          this.processing = false;\r\n          this.loading.hide();\r\n        },\r\n      });\r\n  }\r\n\r\n  isSharedFromMockTest() {\r\n    return this.refFrom === TestType.Mock;\r\n  }\r\n}\r\n","<div *ngIf=\"step !== 2\" class=\"flex-col md:flex md:flex-row h-full md:overflow-hidden\">\r\n  <div class=\"col md:hidden hero-bg py-8 px-6 gap-2\" style=\"height: calc(100vw * 204 / 375)\">\r\n    <img src=\"/assets/images/logo-horizontal-light.webp\" alt=\"\" class=\"self-start h-[32px]\" />\r\n    <span class=\"h7 text-white w-full text-center\">Tri thức khởi đầu từ<br />“Tại sao”?</span>\r\n  </div>\r\n  <div class=\"background-image flex w-full h-full md:items-center justify-center\">\r\n    <div class=\"flex flex-col w-full md:w-[434px] min-h-[338px] p-6 mb-24 gap-6 overflow-auto flex-shrink-0\">\r\n      <img src=\"/assets/images/logo-h.svg\" alt=\"Logo\" class=\"h-12 self-start\" />\r\n      <form\r\n        *ngIf=\"step === 0\"\r\n        class=\"col gap-6 w-full\"\r\n        [formGroup]=\"signUpForm1\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{ 'no-validate': !shouldValidate }\"\r\n      >\r\n        <div *ngIf=\"isSharedFromMockTest()\" [beforeunload]=\"beforeunload\"></div>\r\n        <!-- <div *ngIf=\"isSharedFromMockTest()\" class=\"flex flex-col\" [beforeunload]=\"beforeunload\">\r\n                <span class=\"text-white\">Mã giới thiệu:</span>\r\n                <input *ngIf=\"refFrom !== null && ref\" type=\"text\" readonly=\"readonly\" [value]=\"ref\" />\r\n              </div> -->\r\n        <div class=\"col gap-2\">\r\n          <h4>Đăng ký tài khoản Kyons</h4>\r\n        </div>\r\n        <div class=\"col gap-2 w-full\">\r\n          <!-- <div class=\"col w-full\">\r\n            <input #lastNameElm type=\"text\" placeholder=\"Họ (*)\" formControlName=\"lastName\" autocomplete=\"off\" />\r\n          </div>\r\n          <div class=\"col w-full\">\r\n            <input type=\"text\" placeholder=\"Tên (*)\" formControlName=\"firstName\" autocomplete=\"off\" />\r\n          </div> -->\r\n          <div class=\"col w-full\">\r\n            <input\r\n              #emailElm\r\n              type=\"text\"\r\n              placeholder=\"Nhập email của bạn (*)\"\r\n              formControlName=\"email\"\r\n              autocomplete=\"off\"\r\n            />\r\n            <div *ngIf=\"email.invalid && shouldValidate\">\r\n              <!-- <div *ngIf=\"email.errors?.['required']\">Chưa nhập Email.</div> -->\r\n              <div class=\"error\" *ngIf=\"email.errors?.['pattern']\">\r\n                Hãy điền email đúng định dạng. Ví dụ như là: example&#64;gmail.com\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"col w-full\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nhập số điện thoại của bạn (*)\"\r\n              formControlName=\"phone\"\r\n              autocomplete=\"off\"\r\n            />\r\n            <div *ngIf=\"phone.invalid && shouldValidate\">\r\n              <div class=\"error\" *ngIf=\"phone.errors?.['pattern']\">Vui lòng nhập đúng số điện thoại.</div>\r\n            </div>\r\n          </div> -->\r\n          <div class=\"relative w-full\">\r\n            <input\r\n              #passwordElm\r\n              [type]=\"showPassword ? 'text' : 'password'\"\r\n              class=\"w-full\"\r\n              placeholder=\"Nhập mật khẩu\"\r\n              formControlName=\"password\"\r\n            />\r\n            <button\r\n              (click)=\"showPassword = !showPassword\"\r\n              class=\"absolute right-0 top-0 w-11 h-full flex items-center justify-center cursor-pointer\"\r\n            >\r\n              <i *ngIf=\"showPassword\" class=\"icon-VisibilityOff\"></i>\r\n              <i *ngIf=\"!showPassword\" class=\"icon-Visibility\"></i>\r\n            </button>\r\n          </div>\r\n          <!-- <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\r\n            <div *ngIf=\"password.errors?.['required']\">Chưa nhập mật khẩu.</div>\r\n            <div *ngIf=\"password.errors?.['pattern']\">Mật khẩu không hợp lệ.</div>\r\n          </div>\r\n          <div class=\"h-4\"></div> -->\r\n          <!-- ^((?=.*[A-Z])(?=.*d).{8,99}) -->\r\n          <div class=\"text-sm\">\r\n            Mật khẩu phải có:<br />\r\n            <ul class=\"list-disc\">\r\n              <li\r\n                class=\"ml-5\"\r\n                [ngClass]=\"{\r\n                  'text-red-0': (password.dirty || password.touched) && password.value.length < 8,\r\n                  'text-darkEmerald': (password.dirty || password.touched) && password.value.length >= 8\r\n                }\"\r\n              >\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && password.value.length < 8\"\r\n                  class=\"text-red-0 icon-Cancel\"\r\n                ></i>\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && password.value.length >= 8\"\r\n                  class=\"text-darkEmerald icon-Check\"\r\n                ></i>\r\n                &nbsp;Từ 8 ký tự trở lên\r\n              </li>\r\n              <li\r\n                class=\"ml-5\"\r\n                [ngClass]=\"{\r\n                  'text-red-0': (password.dirty || password.touched) && notHaveUppercase(password.value),\r\n                  'text-darkEmerald': (password.dirty || password.touched) && !notHaveUppercase(password.value)\r\n                }\"\r\n              >\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && notHaveUppercase(password.value)\"\r\n                  class=\"text-red-0 icon-Cancel\"\r\n                ></i>\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && !notHaveUppercase(password.value)\"\r\n                  class=\"text-darkEmerald icon-Check\"\r\n                ></i>\r\n                &nbsp;Ký tự viết hoa (A-Z)\r\n              </li>\r\n              <li\r\n                class=\"ml-5\"\r\n                [ngClass]=\"{\r\n                  'text-red-0': (password.dirty || password.touched) && notHaveDigit(password.value),\r\n                  'text-darkEmerald': (password.dirty || password.touched) && !notHaveDigit(password.value)\r\n                }\"\r\n              >\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && notHaveDigit(password.value)\"\r\n                  class=\"text-red-0 icon-Cancel\"\r\n                ></i>\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && !notHaveDigit(password.value)\"\r\n                  class=\"text-darkEmerald icon-Check\"\r\n                ></i>\r\n                &nbsp;Ký tự số (0-9)\r\n              </li>\r\n              <li\r\n                class=\"ml-5\"\r\n                [ngClass]=\"{\r\n                  'text-red-0': (password.dirty || password.touched) && notHaveSpecial(password.value),\r\n                  'text-darkEmerald': (password.dirty || password.touched) && !notHaveSpecial(password.value)\r\n                }\"\r\n              >\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && notHaveSpecial(password.value)\"\r\n                  class=\"text-red-0 icon-Cancel\"\r\n                ></i>\r\n                <i\r\n                  *ngIf=\"(password.dirty || password.touched) && !notHaveSpecial(password.value)\"\r\n                  class=\"text-darkEmerald icon-Check\"\r\n                ></i>\r\n                &nbsp;Ký tự đặc biệt (~! &#64;#$%^&*_-+=`|\\()&#123;&#125;[]:;\"'&#60;>,.?/)\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <label for=\"tos\" class=\"checkbox dark flex gap-2\">\r\n          <input #tos type=\"checkbox\" formControlName=\"tosChecked\" id=\"tos\" />\r\n          <span class=\"text-sm !mt-0\" [ngClass]=\"{ error: tosChecked.invalid && shouldValidate }\">\r\n            Tôi đồng ý với điều kiện và điều khoản sử dụng của Kyons. Xem điều kiện và điều khoản sử dụng tại\r\n            <a [routerLink]=\"paths.termsOfService.path\" target=\"_blank\">đây</a>\r\n          </span>\r\n        </label>\r\n        <div class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\r\n        <button (click)=\"submitForm2()\" class=\"btn\" [disabled]=\"processing\">Tiếp tục</button>\r\n      </form>\r\n      <form *ngIf=\"step === 1\" class=\"col gap-6 w-full\" [formGroup]=\"signUpForm1\" autocomplete=\"off\">\r\n        <div *ngIf=\"isSharedFromMockTest()\" [beforeunload]=\"beforeunload\"></div>\r\n        <!-- <div *ngIf=\"isSharedFromMockTest()\" class=\"flex flex-col\" [beforeunload]=\"beforeunload\">\r\n                <span class=\"text-white\">Mã giới thiệu:</span>\r\n                <input *ngIf=\"refFrom !== null && ref\" type=\"text\" readonly=\"readonly\" [value]=\"ref\" />\r\n              </div> -->\r\n        <div class=\"col gap-2\">\r\n          <h4>Trước khi bắt đầu hành trình...</h4>\r\n          <span>Kyons cần một vài thông tin cơ bản để hiểu bạn hơn nhé!</span>\r\n          <i>Lưu ý: Bạn có thể thay đổi thông tin này sau.</i>\r\n        </div>\r\n        <div class=\"col gap-2 w-full\">\r\n          <div class=\"col w-full gap-1\">\r\n            <span>Ngày sinh của bạn</span>\r\n            <input type=\"date\" placeholder=\"07/05/2023\" formControlName=\"birthdate\" autocomplete=\"off\" />\r\n          </div>\r\n          <div class=\"col w-full gap-1\">\r\n            <span>Khối lớp của bạn</span>\r\n            <select formControlName=\"class\">\r\n              <option value=\"Lớp 10\">Lớp 10</option>\r\n              <option value=\"Lớp 11\">Lớp 11</option>\r\n              <option value=\"Lớp 12\">Lớp 12</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col w-full gap-1\">\r\n            <span>Bạn đang học trường nào?</span>\r\n            <input type=\"text\" placeholder=\"VD: THPT Nguyễn Thượng Hiền\" formControlName=\"school\" autocomplete=\"off\" />\r\n          </div>\r\n          <div class=\"col w-full gap-1\">\r\n            <span>Thành phố nơi bạn sinh sống?</span>\r\n            <select formControlName=\"city\">\r\n              <option value=\"TP Hồ Chí Minh\" selected>TP Hồ Chí Minh</option>\r\n              <option value=\"Hà Nội\">Hà Nội</option>\r\n              <option value=\"An Giang\">An Giang</option>\r\n              <option value=\"Bà Rịa-Vũng Tàu\">Bà Rịa-Vũng Tàu</option>\r\n              <option value=\"Bạc Liêu\">Bạc Liêu</option>\r\n              <option value=\"Bắc Giang\">Bắc Giang</option>\r\n              <option value=\"Bắc Kạn\">Bắc Kạn</option>\r\n              <option value=\"Bắc Ninh\">Bắc Ninh</option>\r\n              <option value=\"Bến Tre\">Bến Tre</option>\r\n              <option value=\"Bình Dương\">Bình Dương</option>\r\n              <option value=\"Bình Định\">Bình Định</option>\r\n              <option value=\"Bình Phước\">Bình Phước</option>\r\n              <option value=\"Bình Thuận\">Bình Thuận</option>\r\n              <option value=\"Cà Mau\">Cà Mau</option>\r\n              <option value=\"Cao Bằng\">Cao Bằng</option>\r\n              <option value=\"Cần Thơ\">Cần Thơ</option>\r\n              <option value=\"Đà Nẵng\">Đà Nẵng</option>\r\n              <option value=\"Đắk Lắk\">Đắk Lắk</option>\r\n              <option value=\"Đắk Nông\">Đắk Nông</option>\r\n              <option value=\"Điện Biên\">Điện Biên</option>\r\n              <option value=\"Đồng Nai\">Đồng Nai</option>\r\n              <option value=\"Đồng Tháp\">Đồng Tháp</option>\r\n              <option value=\"Gia Lai\">Gia Lai</option>\r\n              <option value=\"Hà Giang\">Hà Giang</option>\r\n              <option value=\"Hà Nam\">Hà Nam</option>\r\n              <option value=\"Hà Tĩnh\">Hà Tĩnh</option>\r\n              <option value=\"Hải Dương\">Hải Dương</option>\r\n              <option value=\"Hải Phòng\">Hải Phòng</option>\r\n              <option value=\"Hậu Giang\">Hậu Giang</option>\r\n              <option value=\"Hòa Bình\">Hòa Bình</option>\r\n              <option value=\"Hưng Yên\">Hưng Yên</option>\r\n              <option value=\"Khánh Hòa\">Khánh Hòa</option>\r\n              <option value=\"Kiên Giang\">Kiên Giang</option>\r\n              <option value=\"Kon Tum\">Kon Tum</option>\r\n              <option value=\"Lai Châu\">Lai Châu</option>\r\n              <option value=\"Lạng Sơn\">Lạng Sơn</option>\r\n              <option value=\"Lào Cai\">Lào Cai</option>\r\n              <option value=\"Lâm Đồng\">Lâm Đồng</option>\r\n              <option value=\"Long An\">Long An</option>\r\n              <option value=\"Nam Định\">Nam Định</option>\r\n              <option value=\"Nghệ An\">Nghệ An</option>\r\n              <option value=\"Ninh Bình\">Ninh Bình</option>\r\n              <option value=\"Ninh Thuận\">Ninh Thuận</option>\r\n              <option value=\"Phú Thọ\">Phú Thọ</option>\r\n              <option value=\"Phú Yên\">Phú Yên</option>\r\n              <option value=\"Quảng Bình\">Quảng Bình</option>\r\n              <option value=\"Quảng Nam\">Quảng Nam</option>\r\n              <option value=\"Quảng Ngãi\">Quảng Ngãi</option>\r\n              <option value=\"Quảng Ninh\">Quảng Ninh</option>\r\n              <option value=\"Quảng Trị\">Quảng Trị</option>\r\n              <option value=\"Sóc Trăng\">Sóc Trăng</option>\r\n              <option value=\"Sơn La\">Sơn La</option>\r\n              <option value=\"Tây Ninh\">Tây Ninh</option>\r\n              <option value=\"Thái Bình\">Thái Bình</option>\r\n              <option value=\"Thái Nguyên\">Thái Nguyên</option>\r\n              <option value=\"Thanh Hóa\">Thanh Hóa</option>\r\n              <option value=\"Thừa Thiên Huế\">Thừa Thiên Huế</option>\r\n              <option value=\"Tiền Giang\">Tiền Giang</option>\r\n              <option value=\"Trà Vinh\">Trà Vinh</option>\r\n              <option value=\"Tuyên Quang\">Tuyên Quang</option>\r\n              <option value=\"Vĩnh Long\">Vĩnh Long</option>\r\n              <option value=\"Vĩnh Phúc\">Vĩnh Phúc</option>\r\n              <option value=\"Yên Bái\">Yên Bái</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\r\n        <div class=\"flex item-center justify-between gap-2\">\r\n          <button (click)=\"step = 0\" class=\"btn-rounded\"><i class=\"icon-ArrowLeft text-[24px]\"></i> Quay lại</button>\r\n          <button type=\"submit\" (click)=\"submitForm2()\" class=\"btn flex-1\" [disabled]=\"processing\">\r\n            {{ processing ? 'Đang xử lý' : 'Tạo tài khoản' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <span>Đã có tài khoản? <a [routerLink]=\"paths.signIn.path\">Đăng nhập</a></span>\r\n    </div>\r\n  </div>\r\n  <div class=\"hero-img hidden md:flex justify-center flex-shrink-0 overflow-hidden relative\">\r\n    <img class=\"w-full h-full object-cover absolute top-0\" src=\"/assets/images/hero-image.webp\" alt=\"\" />\r\n    <span class=\"text-white text-[36px] font-semibold text-center relative\">Tri thức khởi đầu<br />từ “Tại sao”?</span>\r\n  </div>\r\n</div>\r\n<div\r\n  *ngIf=\"step === 2\"\r\n  class=\"bg-blueGrey-100 absolute top-0 left-0 w-screen h-screen flex items-center justify-center p-6\"\r\n>\r\n  <div class=\"flex flex-col items-center justify-center w-full sm:w-[493px] gap-6\">\r\n    <img src=\"assets/images/New Account.svg\" />\r\n    <div class=\"bg-white rounded-sm p-6 flex flex-col gap-6\">\r\n      <h4 class=\"text-primaryBlue\">Cảm ơn bạn đã tạo tài khoản cùng Kyons!</h4>\r\n      <div class=\"flex flex-col gap-2\">\r\n        <span\r\n          >Trước khi sử dụng Kyons, bạn hãy <strong class=\"text-orange\">xác thực tài khoản</strong> bằng cách nhấn vào\r\n          đường link đã được gửi về email <strong>{{ email.value }}</strong> của bạn nhé!</span\r\n        >\r\n        <span>Nếu không tìm thấy email, bạn kiểm tra thử mục Spam và quảng cáo xem sao 🤔?</span>\r\n        <span\r\n          >Qua 10 phút vẫn không thấy email nào? Liên hệ\r\n          <a href=\"https://www.facebook.com/KyonsVN\" target=\"_blank\">Kyons fanpage</a> để được hỗ trợ kịp thời!</span\r\n        >\r\n      </div>\r\n      <a class=\"btn\" [routerLink]=\"paths.signIn.path\">Đăng nhập ngay thôi</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Directive, HostListener, Input, OnDestroy } from '@angular/core';\r\n\r\nimport { BeforeUnloadService } from './before-unload.service';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[beforeunload]',\r\n})\r\nexport class BeforeunloadDirective implements AfterViewInit, OnDestroy {\r\n  @Input('beforeunload') event!: () => void;\r\n\r\n  private eventId!: string;\r\n\r\n  constructor(\r\n    private service: BeforeUnloadService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.eventId = this.service.addLeaveCheck(this.event);\r\n  }\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  beforeUnloadHander($event: any) {\r\n    if (this.event() != undefined) {\r\n      return $event.returnValue = true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.service.removeLeaveCheck(this.eventId);\r\n  }\r\n}\r\n\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { BEFORE_UNLOAD_FN } from './before-unload.token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BeforeUnloadService {\r\n\r\n  leaveCheckFn: { [Key: string]: () => void } = {};\r\n\r\n  constructor(\r\n    @Optional() @Inject(BEFORE_UNLOAD_FN) private alertFn:\r\n      (message: string) => Observable<boolean>,\r\n  ) { }\r\n\r\n  addLeaveCheck(fn: () => void) {\r\n    const nowKey = Object.keys(this.leaveCheckFn).length;\r\n    this.leaveCheckFn[nowKey] = fn;\r\n    return `${nowKey}`;\r\n  }\r\n\r\n  leaveCheck(message: string) {\r\n\r\n    const checkResult = Object.keys(this.leaveCheckFn).some((key) => {\r\n      const result = this.leaveCheckFn[key]();\r\n      if (typeof (result) === 'string') {\r\n        message = result;\r\n      }\r\n      return result;\r\n    });\r\n\r\n    if (checkResult) {\r\n      return this.alertFn ?\r\n        this.alertFn(message) :\r\n        of(confirm(message));\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  removeLeaveCheck(key: string) {\r\n    delete this.leaveCheckFn[key];\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const BEFORE_UNLOAD_MESSAGE = new InjectionToken('BEFORE_UNLOAD_MESSAGE');\r\nexport const BEFORE_UNLOAD_FN = new InjectionToken('BEFORE_UNLOAD_FN');\r\n","import { BeforeunloadDirective } from \"./before-unload.directive\";\r\nimport { BeforeUnloadService } from \"./before-unload.service\";\r\nimport { BEFORE_UNLOAD_MESSAGE } from \"./before-unload.token\";\r\n\r\nexport function beforeUnloadDirective(): string {\r\n  return 'before-unload-directive';\r\n}\r\n\r\nexport { BeforeunloadDirective, BeforeUnloadService, BEFORE_UNLOAD_MESSAGE };\r\n\r\n"],"names":["TestType","CommonModule","ElementRef","FormBuilder","FormControl","FormsModule","ReactiveFormsModule","Validators","ActivatedRoute","RouterModule","AccountStandaloneService","LoadingOverlayService","NavigationService","BeforeunloadDirective","notHaveDigit","notHaveSpecial","notHaveUppercase","search","i0","ɵɵelement","ɵɵproperty","ctx_r4","beforeunload","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","SignUpComponent_div_0_form_10_div_9_div_1_Template","ɵɵadvance","ctx_r6","email","errors","ɵɵtextInterpolate","ctx_r19","errorMessage","SignUpComponent_div_0_form_10_div_1_Template","SignUpComponent_div_0_form_10_div_9_Template","ɵɵlistener","SignUpComponent_div_0_form_10_Template_button_click_13_listener","ɵɵrestoreView","_r22","ctx_r21","ɵɵnextContext","ɵɵresetView","showPassword","SignUpComponent_div_0_form_10_i_14_Template","SignUpComponent_div_0_form_10_i_15_Template","SignUpComponent_div_0_form_10_i_21_Template","SignUpComponent_div_0_form_10_i_22_Template","SignUpComponent_div_0_form_10_i_25_Template","SignUpComponent_div_0_form_10_i_26_Template","SignUpComponent_div_0_form_10_i_29_Template","SignUpComponent_div_0_form_10_i_30_Template","SignUpComponent_div_0_form_10_i_33_Template","SignUpComponent_div_0_form_10_i_34_Template","SignUpComponent_div_0_form_10_div_43_Template","SignUpComponent_div_0_form_10_Template_button_click_44_listener","ctx_r23","submitForm2","ctx_r2","signUpForm1","ɵɵpureFunction1","_c2","shouldValidate","isSharedFromMockTest","invalid","ɵɵpureFunction2","_c3","password","dirty","touched","value","length","_c4","tosChecked","paths","termsOfService","path","processing","ctx_r24","ctx_r25","SignUpComponent_div_0_form_11_div_1_Template","SignUpComponent_div_0_form_11_div_158_Template","SignUpComponent_div_0_form_11_Template_button_click_160_listener","_r27","ctx_r26","step","SignUpComponent_div_0_form_11_Template_button_click_163_listener","ctx_r28","ctx_r3","ɵɵtextInterpolate1","SignUpComponent_div_0_form_10_Template","SignUpComponent_div_0_form_11_Template","ctx_r0","signIn","ctx_r1","SignUpComponent","constructor","route","fb","authService","navService","loading","group","required","pattern","phone","birthdate","class","school","city","isShowTOS","requiredTrue","currentUrl","refFrom","Mock","undefined","ngOnInit","ref","snapshot","queryParams","addControl","markAsPristine","valueChanges","subscribe","get","setValue","replace","emitEvent","window","location","href","origin","ngAfterViewInit","emailElm","nativeElement","focus","showTOS","validate","markAsDirty","untouched","markAllAsTouched","show","signUp","next","res","hide","error","err","console","log","error_code","invalid_param","setTimeout","setErrors","serverReject","markAsTouched","onlySelf","_","ɵɵdirectiveInject","i1","i2","i3","i4","i5","_2","selectors","viewQuery","SignUpComponent_Query","rf","ctx","SignUpComponent_div_0_Template","SignUpComponent_div_1_Template","i6","NgClass","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","RouterLink","styles","BeforeUnloadService","service","eventId","addLeaveCheck","event","beforeUnloadHander","$event","returnValue","ngOnDestroy","removeLeaveCheck","hostBindings","BeforeunloadDirective_HostBindings","ɵɵresolveWindow","of","BEFORE_UNLOAD_FN","alertFn","leaveCheckFn","fn","nowKey","Object","keys","leaveCheck","message","checkResult","some","key","result","confirm","ɵɵinject","factory","ɵfac","providedIn","InjectionToken","BEFORE_UNLOAD_MESSAGE","beforeUnloadDirective"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}